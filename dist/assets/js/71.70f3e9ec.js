(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{460:function(s,a,n){"use strict";n.r(a);var e=n(54),t=Object(e.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"mysql集群"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mysql集群"}},[s._v("#")]),s._v(" mysql集群")]),s._v(" "),n("ul",[n("li",[s._v("热备（双主多从）")]),s._v(" "),n("li",[s._v("冷备（一主多从）")])]),s._v(" "),n("h2",{attrs:{id:"主从复制原理及流程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#主从复制原理及流程"}},[s._v("#")]),s._v(" 主从复制原理及流程")]),s._v(" "),n("p",[n("a",{attrs:{"data-fancybox":"",title:"主从复制原理流程",href:"主从复制原理流程.png"}},[n("img",{attrs:{src:"%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E5%8E%9F%E7%90%86%E6%B5%81%E7%A8%8B.png",alt:"img.png"}})])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("1. 主库在执行DDL和DML后，一个事务完整结束后，会将这些数据操作、数据库结构操作记录到二进制文件中（bin_log）\n2. 主库推送二进制文件到从库的中继日志（relay_log）中，随后从库会根据中继日志的内容重新执行，这样保证了从和主的数据、数据结构一致！ \n3. Mysql通过三个线程来完成了主从复制的，其中 Binlog Dump跑在主库上，IO和SQL线程跑在从库上\n4. 当从库启动主从复制后（start slave），首先创建IO线程连接主库，连接成功后，主库的Binlog Dump线程将主库的bin_log二进制文件发送给IO线程，\n   IO线程收到bin_log后会将其更新到中继日志Relay_log上，之后从库的SQL线程将中继日志Relay_log的内容执行！\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("h2",{attrs:{id:"异步复制可能出现的问题-从库丢失了主的数据问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#异步复制可能出现的问题-从库丢失了主的数据问题"}},[s._v("#")]),s._v(" 异步复制可能出现的问题：从库丢失了主的数据问题")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("2021-12-03 新增：\n    问题： \n        异步复制问题  ：由于是异步线程执行主库推送的bin_log，所以slave容易出现延迟，若master出现宕机的情况，将会造成延迟的数据丢失。    \n        \n    解决 ：\n        为了解决异步复制的问题，mysql5.5引入了半同步复制 semi-sync （主库宕机后，无法同步数据到从库，防止数据丢失），其介于全量同步复制和异步复制之间。master执行完事务之后，并不直接返回，而是要等待至少一个slave写入成功才返回。\n      由于需要与至少一个slave进行交互，性能相比较异步复制肯定是有不少折损的。\n        全复制模式当然是要等待所有的slave节点复制完成，这种安全性最高，但是效率也最低。从概念上来讲，只有一个slave节点的半复制就是全复制。\n        5.7之后，mysql实现了组复制（group replication）协议。它支持单主模式和多主模式，但在同一个group内，不允许同时存在。听起还好像很神奇，其实它还是通过paxos协议去实现的。        \n   \n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("h2",{attrs:{id:"mysql-复制类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mysql-复制类型"}},[s._v("#")]),s._v(" Mysql 复制类型")]),s._v(" "),n("p",[s._v("默认是异步复制")]),s._v(" "),n("ul",[n("li",[s._v("异步复制\n"),n("ol",[n("li",[s._v("在异步复制中，Master不需要关心Slave是否接收到了二进制日志（binlog），所以Master和Salve 没有任何的以来关系，可以认为Master和Slave是分别独立运动的服务，数据最终一致会通过二进制日志达到。")]),s._v(" "),n("li",[s._v("异步复制的性能最好，因为它对数据库本身没有任何的开销，除非主从延迟非常大， Dump Thread需要读取大量的二进制日志文件")]),s._v(" "),n("li",[s._v("如果业务对于数据的一致性要求不高，当发生故障时（master主库宕机），能容忍数据的丢失，甚至大量的数据丢失，推荐使用异步复制，因为性能最好。")])])]),s._v(" "),n("li",[s._v("半同步复制\n"),n("ol",[n("li",[s._v("半同步复制要求在Master事务提交完后，并不能直接返回，而是要求至少有1个Slave接收到二进制日志，数据同步写入成功之后才返回，这样保证了Master宕机之后，至少有个1个Slave的数据是完整的")]),s._v(" "),n("li",[s._v("半同步复制并不是 Mysql的内置功能，需要安装半同步插件，并启用半同步复制功能，设置N个Slave接收二进制日志成功。配置如下：")])])])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('  plugin-load="rpl_semi_sync_master=semisync_master.so;rpl_semi_sync_slave=semisync_slave.so" # 要求数据库启动时安装半同步插件\n  rpl-semi-sync-master-enabled = 1 # master启用半同步插件\n  rpl-semi-sync-slave-enabled = 1 # slave启用半同步插件\n  rpl_semi_sync_master_wait_no_slave = 1 # 表示至少等待1个slave接收二进制日志成功后（同步成功），master才会提交事务并成功返回\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("ol",{attrs:{start:"2"}},[n("li",[s._v("有损半同步复制 ： mysql5.5 - 5.7 ， 这种有损半同步机制在Master宕机后，Slave会丢失最后一批提交的数据，若此时Slave成为Master，会发现之前提交的事务不存在了，出现了回滚的情况。如下图\n"),n("a",{attrs:{"data-fancybox":"",title:"有损半同步复制",href:"有损半同步复制.png"}},[n("img",{attrs:{src:"%E6%9C%89%E6%8D%9F%E5%8D%8A%E5%90%8C%E6%AD%A5%E5%A4%8D%E5%88%B6.png",alt:"img.png"}})]),s._v("\n可以看到，在有损半同步复制情况下，Master在提交事务之后，将二进制日志文件发送个Slave，在等待 Slave返回ack。若在第4步的时候，二进制文件还未发送到 Slave的时候，Master发生了宕机\n此时，Slave就丢失了Master已经提交的数据。")]),s._v(" "),n("li",[s._v("无损半同步复制 ： mysql5.7之后，原理如下图\n"),n("a",{attrs:{"data-fancybox":"",title:"无损半同步复制",href:"无损半同步复制.png"}},[n("img",{attrs:{src:"%E6%97%A0%E6%8D%9F%E5%8D%8A%E5%90%8C%E6%AD%A5%E5%A4%8D%E5%88%B6.png",alt:"img.png"}})]),s._v("\n从上图可以看到，无损半同步复制 WAIT ACK 发生在事务提交之前，这样即便 Slave 没有收到二进制日志，但是 Master 宕机了，由于最后一个事务还没有提交，所以本身这个数据对外也不可见，不存在丢失的问题。\n所以，对于任何有数据一致性要求的业务，如电商的核心订单业务、银行、保险、证券等与资金密切相关的业务，务必使用无损半同步复制。这样数据才是安全的、有保障的、即使发生宕机，从机也有一份完整的数据。")])]),s._v(" "),n("ul",[n("li",[n("p",[s._v("多源复制")]),s._v(" "),n("ol",[n("li",[s._v("无论是异步复制还是半同步复制，都是1个Master对应N个Slave。其实Mysql也支持N个Master对应1个Slave，这种架构就称之为多源复制")]),s._v(" "),n("li",[s._v("多源复制允许在不同的Mysql实例上的数据同步到1台Mysql实例上，方便在1台Slave服务上进行一些统计查询，比如常见的 OLAP （ON-Line Analysis Processing 在线分析处理技术）业务查询\n"),n("a",{attrs:{"data-fancybox":"",title:"多源复制",href:"多源复制.png"}},[n("img",{attrs:{src:"%E5%A4%9A%E6%BA%90%E5%A4%8D%E5%88%B6.png",alt:"img.png"}})]),s._v("\n上面图显示了订单库、库存库、供应商库，通过多源复制同步到了一台 MySQL 实例上，接着就可以通过 MySQL 8.0 提供的复杂 SQL 能力，对业务进行深度的数据分析和挖掘。")])])]),s._v(" "),n("li",[n("p",[s._v("延迟复制")]),s._v(" "),n("ol",[n("li",[s._v("前面介绍的复制架构，Slave在接收到二进制日志后，会尽可能快的回放日志，这样事为了避免主从之间出现数据延迟。而延迟复制却允许Slave延迟回放接收到的二进制日志文件，为了避免Master上误操作，马上又同步到了从服务器，导致数据完全丢失。")]),s._v(" "),n("li",[s._v("延迟复制在数据库备份架构设计中非常常见，比如可以设置一个延迟一天的备份机，这样本质来说，用户可以有1份24小时前的备份快照。")]),s._v(" "),n("li",[s._v("当线上发生误操作，如 DROP TABLE 、 DROP DATABASE 这样的灾难性命令时，用户有一个24小时前的备份快照，这样可以快速恢复。\n这个针对金融行业来说，可以考虑设计。")]),s._v(" "),n("li",[s._v("通过如下命令设置延迟复制\n需要设置 Slave上的 master_delay 参数实现，输入如下命令，后通过 Show slave status \\G; 查看\nSQL_DELAY: 3600 表示该Slave延迟复制Master数据多少秒，单位为秒")])])])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("mysql>stop slave;\nmysql>CHANGE MASTER TO MASTER_DELAY = 3600；\nmysql>start slave;\nmysql>show slave status \\G;\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("h2",{attrs:{id:"主从同步带来的同步延迟问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#主从同步带来的同步延迟问题"}},[s._v("#")]),s._v(" 主从同步带来的同步延迟问题")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("场景: 先插入一条数据，再查询出这条数据做一些更新的操作。当在写并发(主库)高达 2000 的时候，主从复制的延迟是在几十毫秒，会发现有部分数据并没有做更新的操作。")])]),s._v(" "),n("li",[n("p",[s._v("show slave status \\G;\nSeconds_Behind_Master ： 从库复制主库的数据落后了多少ms")])]),s._v(" "),n("li",[n("p",[s._v("若主从延迟较大，可以使用以下解决方案")])])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("1. 对主库再进行分库 （双主，多主，互为主从），这样每个主库写的并发操作就减少了几倍，此时主从的延迟可以忽略不计。\n2. 打开Mysql支持的并行复制，多个库并行复制。如果主库的写并发还是特别高的，单主库写并发达到了2000/s，并行复制还是无法解决该问题\n3. 重新修改业务代码，尽量避免插入数据后，又去查询数据出来再更新，或者引入消息队列执行后续的更新操作 （延迟、异步）\n4. 如果非要先插入，后查询，再更新，可以考虑直连主库，但是一般不推荐这种方法， 因为这样读写就没有存在的意义\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h2",{attrs:{id:"主从复制定义"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#主从复制定义"}},[s._v("#")]),s._v(" 主从复制定义：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("主库的DDL和DML的操作通过二进制文件（bin_log）传输到从库上，从库对执行这个二进制文件，这样保证了主、库数据和数据库、表结构的一致！\n\n一主多从： 和上面从库配置一致，注意，如果stop slave;后，主库执行了的sql在从库start slave;后，从库的SQL-Running线程会继续跑stop slave;后主库执行的sql\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("h2",{attrs:{id:"主库从库搭建"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#主库从库搭建"}},[s._v("#")]),s._v(" 主库从库搭建")]),s._v(" "),n("h3",{attrs:{id:"主库搭建"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#主库搭建"}},[s._v("#")]),s._v(" 主库搭建")]),s._v(" "),n("ul",[n("li",[n("ol",[n("li",[s._v("定义my.cnf配置文件，并且挂在到容器内部")])])])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("[mysqld]\n# 设置server_id，同一局域网中需要唯一\nserver_id=101\n# 指定不需要同步的数据库名称\nbinlog-ignore-db=mysql,admin,dynamic_datasource,kl,manage,nacos_config,wps\n# 指定数据库同步的名称\n# binlog-do-db=wps\n# 指定数据库-表同步的名称\n# binlog-do-table=skate_tab\n# 开启二进制日志功能\nlog-bin=mysql-bin\n# 设置二进制日志使用内存大小（事务）\nbinlog_cache_size=1M\n# 设置使用的二进制日志格式（mixed,statement,row） statement:基于sql语句的复制，row：基于行数据复制，只记录某行被修改，不记录sql，mixed：两种混合使用\nbinlog_format=mixed\n# 二进制日志过期清理时间。默认值为0，表示不自动清理。\nexpire_logs_days=0\n# 跳过主从复制中遇到的所有错误或指定类型的错误，避免slave端复制中断。\n# 如：1062错误是指一些主键重复，1032错误是因为主从数据库数据不一致\nslave_skip_errors=1062\n\n# 双主 - 全局表自增开始值\nauto_increment_offset=1\n# 双主 - 全局表自增因子 （1，3，5，7........）\nauto_increment_increment=2\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br")])]),n("ul",[n("li",[n("ol",{attrs:{start:"2"}},[n("li",[s._v("docker-compose 安装主库\ndocker-compose -f docker-mysql-master up -d")])])])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('version: "3"\nservices:\n  mysql-master:\n    image: mysql:5.7\n    container_name: mysql-master-MQZ\n    ports:\n      - "3306:3306"\n    volumes:\n      - /root/mqz/mysql/log:/var/log/mysql\n      - /root/mqz/mysql/data:/var/lib/mysql\n      - /root/mysql/config/master/my.cnf:/etc/mysql/my.cnf\n    privileged: true\n    environment:\n      - MYSQL_ROOT_PASSWORD=mengqizhang\n      - TZ=Asia/Shanghai\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("h3",{attrs:{id:"安装从库"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安装从库"}},[s._v("#")]),s._v(" 安装从库")]),s._v(" "),n("p",[s._v("-1. 定义my.cnf配置文件，并且挂在到容器内部")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("[mysqld]\n# 设置server_id，同一局域网中需要唯一\nserver_id=102\n# 指定不需要同步的数据库名称\nbinlog-ignore-db=mysql\n# 开启二进制日志功能，以备Slave作为其它数据库实例的Master时使用\nlog-bin=mysql-slave1-bin\n# 设置二进制日志使用内存大小（事务）\nbinlog_cache_size=1M\n# 设置使用的二进制日志格式（mixed,statement,row）\nbinlog_format=mixed\n# 二进制日志过期清理时间。默认值为0，表示不自动清理。\nexpire_logs_days=0\n# 跳过主从复制中遇到的所有错误或指定类型的错误，避免slave端复制中断。\n# 如：1062错误是指一些主键重复，1032错误是因为主从数据库数据不一致\nslave_skip_errors=1062\n# relay_log配置中继日志\nrelay_log=mysql-relay-bin\n# log_slave_updates表示slave将复制事件写进自己的二进制日志\n# 此参数控制slave数据库是否把从master接受到的log并在本slave执行的内容记录到slave的二进制日志中，\n# 在级联复制环境中（包括双master环境），这个参数是必须的\nlog_slave_updates=1\n# 执行复制数据库名\n# replicate-do-db=wps\n# 指定复制表名\n# replicate-do-table=user\n# slave设置为只读（具有super权限的用户除外）\nread_only=1\n\n# 双主 - 全局表自增开始值\nauto_increment_offset=1\n# 双主 - 全局表自增因子 （1，3，5，7........）\nauto_increment_increment=2\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br")])]),n("ul",[n("li",[n("ol",{attrs:{start:"2"}},[n("li",[s._v("docker-compose 安装从库\ndocker-compose -f docker-mysql-slave up -d")])])])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('version: "3"\nservices:\n  mysql-slave:\n    image: mysql:5.7\n    container_name: mysql-slave-MQZ\n    ports:\n      - "3305:3306"\n    volumes:\n      - /root/mqz/mysql-slave/log:/var/log/mysql\n      - /root/mqz/mysql-slave/data:/var/lib/mysql\n      - /root/mysql/config/master/my.cnf:/etc/mysql/my.cnf\n    privileged: true\n    environment:\n      - MYSQL_ROOT_PASSWORD=mengqizhang\n      - TZ=Asia/Shanghai\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("ul",[n("li",[n("p",[s._v("注意docker目录到 /etc/mysql/，否则会")])]),s._v(" "),n("li",[n("p",[s._v("报错 Warning: World-writable config file ‘/etc/mysql/my.cnf’ is ignored 启动忽略配置文件\n/etc/mysql/my.cnf 的权限设置成 “777” 了就会报上面的错误，\n意思是权限全局可写，任何一个用户都可以写。mysql担心这种文件被其他用户恶意修改，所以忽略掉这个配置文件。\n只需要将该文将设置为 644 即可： sudo chmod 644 /etc/mysql/my.cnf")])])]),s._v(" "),n("h2",{attrs:{id:"配置主从关系"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#配置主从关系"}},[s._v("#")]),s._v(" 配置主从关系")]),s._v(" "),n("ul",[n("li",[s._v("主库配置从库同步的用户并且授权\n"),n("a",{attrs:{"data-fancybox":"",title:"111",href:"主库创建配置权限从库同步的用户.png"}},[n("img",{attrs:{src:"%E4%B8%BB%E5%BA%93%E5%88%9B%E5%BB%BA%E9%85%8D%E7%BD%AE%E6%9D%83%E9%99%90%E4%BB%8E%E5%BA%93%E5%90%8C%E6%AD%A5%E7%9A%84%E7%94%A8%E6%88%B7.png",alt:"img.png"}})])]),s._v(" "),n("li",[s._v("从库配置同步主库的配置\n"),n("a",{attrs:{"data-fancybox":"",title:"111",href:"从库配置同步主库的配置.png"}},[n("img",{attrs:{src:"%E4%BB%8E%E5%BA%93%E9%85%8D%E7%BD%AE%E5%90%8C%E6%AD%A5%E4%B8%BB%E5%BA%93%E7%9A%84%E9%85%8D%E7%BD%AE.png",alt:"img.png"}})])]),s._v(" "),n("li",[s._v("查看从库配置同步主库配置是否成功\n"),n("a",{attrs:{"data-fancybox":"",title:"111",href:"查看从库配置同步主库配置是否成功.png"}},[n("img",{attrs:{src:"%E6%9F%A5%E7%9C%8B%E4%BB%8E%E5%BA%93%E9%85%8D%E7%BD%AE%E5%90%8C%E6%AD%A5%E4%B8%BB%E5%BA%93%E9%85%8D%E7%BD%AE%E6%98%AF%E5%90%A6%E6%88%90%E5%8A%9F.png",alt:"img.png"}})])])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("1. 按照mysql-master.yml生成主mysql，并且挂载my.cnf主配置文件\n2. 进入主库容器内，并且登陆myslq客户端： mysql -uroot -pmengqizhang\n3. 创建从库同步用户：CREATE USER 'slave'@'%' IDENTIFIED BY '123456';\n   并且配置权限：GRANT REPLICATION SLAVE, REPLICATION CLIENT ON *.* TO 'slave'@'%';\n4. 查看主库的状态： show master status;\n\n5. 按照mysql-slave.yml生成从mysql，并且挂载my.cnf从配置文件\n6. 进入从库容器内，并且登陆mysql客户端： mysql -uroot -pmengqizhang\n7. 设置从库同步主库的配置： change master to master_host='192.168.2.9', master_user='slave-for-3306', master_password='123456', master_port=3305, master_log_file='mall-mysql-slave1-bin.000001', master_log_pos=3947, master_connect_retry=30;\n   change master to master_host='106.12.187.16', master_user='slave-1', master_password='megnqizhang', master_port=3306, master_log_file='mall-mysql-bin.000001', master_log_pos=621, master_connect_retry=30;\n\n   master_host：主库的IP地址；\n   master_port：主库的运行端口；\n   master_user：在主数据库创建的用于同步数据的用户账号 （即第3点在主库创建的用户）；\n   master_password：在主数据库创建的用于同步数据的用户密码 （即第3点在主库创建的用户）；\n   master_log_file：指定从数据库要复制数据的日志文件，通过查看主数据的状态，获取File参数；\n   master_log_pos：指定从数据库从哪个位置开始复制数据，通过查看主数据的状态，获取Position参数；\n   master_connect_retry：连接失败重试的时间间隔，单位为秒。\n8. 查看从库配置同步主库是否成功： show slave status \\G;\n   这个时候开始没有开启主从同步，所以Slave_IO_Running: No 和 Slave_SQL_Running: No\n   其中IO 代表的是和主库连接是否成功\n9. 开启主从同步： start slave;\n   这个时候查看主从已经开始同步： show slave status \\G;\n   Slave_IO_Running: Yes\n   Slave_SQL_Running: Yes\n\n注意： 这里是一主一从，可以一主多从，配置方式如上的从库配置无差别\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br")])]),n("h2",{attrs:{id:"清除主从关系"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#清除主从关系"}},[s._v("#")]),s._v(" 清除主从关系：")]),s._v(" "),n("ul",[n("li",[s._v("主 ：")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    步骤：\n        1. reset master\n        \n    解析：\n        a. 删除所有的bin_log文件，并且清空日志索引文件，重新开始记录bin_log日志文件内容\n        c. show master status;命令在执行reset master后会发现 bin_log文件有所变化，之前的bin_log文件及position均被清空重置    \n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("ul",[n("li",[s._v("从： 清除slave同步复制关系")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    步骤：\n    \n        1. stop slave;\n        2. reset slave all;\n    \n    解析：\n    \n        a. 执行reset slave all后，show slave status \\G;将不再有任何记录输出\n        b. reset slave 是mysql任何版本都有的功能，在stop slave;之后使用\n        c. 主要做删除master.info和relay-log.info文件(中继日志)，删除所有的relay-log，并且创建一个新的relay-log文件\n        d. 从Mysql 5.5开始，多了一个all参数。如果不加all参数，那么所有的连接信息仍然保留在内存中，包括主库地址、端口、用户、密码等。这样可以直接运行start \n            slave命令而不必重新输入change master to命令，而运行show slave status也仍和没有运行reset slave一样，有正常的输出。但如果加了all参数，那么这\n            些内存中的数据也会被清除掉，运行show slave status就输出为空了。\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("h2",{attrs:{id:"双主配置-热备"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#双主配置-热备"}},[s._v("#")]),s._v(" 双主配置 （热备）")]),s._v(" "),n("p",[n("a",{attrs:{"data-fancybox":"",title:"111",href:"双主配置1.png"}},[n("img",{attrs:{src:"%E5%8F%8C%E4%B8%BB%E9%85%8D%E7%BD%AE1.png",alt:"img.png"}})]),s._v("\n：\n注意两mysql服务版本最好一致！")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("定义： 两个数据库互为主从，即 A的从是B，B的从也是A")])]),s._v(" "),n("li",[n("p",[s._v("需要更改 A和B的my.cnf配置，因为A和B库均有互为读写的权限，若表为自增id存在id冲突的情况，这里需要修改一下id自增规则，参考master/conf/my.cnf 、 slave/conf/my.cnf")])]),s._v(" "),n("li",[n("p",[s._v("常见的业务场景下，只有一个主库，另外一个主库可以当成读库！")])]),s._v(" "),n("li",[n("p",[s._v("可以借助mycat实现mysql集群的管理！！")])])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    前置： \n        3306是主库，3305是从库，配置了主从复制\n        \n    实现： 让3306变成3305的从库，即3305修改的记录同步到3306上，3306修改的记录也会同步到3305上   \n        \n    1. 登陆3305从库，根据show master status \\G; 查处3305的机binlog日志名即position\n    2. 配置3305从库给3306开放出的权限： \n        CREATE USER 'slave-for-3306'@'%' IDENTIFIED BY '123456';\n        GRANT REPLICATION SLAVE, REPLICATION CLIENT ON *.* TO 'slave-for-3306'@'%';\n    \n       \n    3. 登陆3306，配置3306库为3305的从库：\n        change master to master_host='192.168.2.9', master_user='slave-for-3306', master_password='123456', master_port=3305, master_log_file='mall-mysql-slave1-bin.000001', master_log_pos=3947, master_connect_retry=30;\n    4. 查看3306从库配置信息： show slave status \\G;\n    5. 开启3306从库复制3305主库： start slave;\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])])])}),[],!1,null,null,null);a.default=t.exports}}]);