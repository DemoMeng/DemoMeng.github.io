(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{437:function(s,a,n){"use strict";n.r(a);var t=n(54),e=Object(t.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"hystrix-熔断机制"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#hystrix-熔断机制"}},[s._v("#")]),s._v(" Hystrix 熔断机制")]),s._v(" "),n("p",[s._v("在分布式系统中，每个服务可能会调用多个服务，然后每个服务的可用性、是否故障，调用方是无法预知的。\nHystrix 可以让我们在分布式系统服务之间的调用，加入一些调用限流、故障处理机制。\nHystrix 通过将依赖的服务进行资源隔离，进而阻止某个服务在调用链上出现问题而导致整个请求等待，同时 Hystrix 还提供了 fallback 降级机制")]),s._v(" "),n("p",[s._v("Hystrix 是 Netflix 公司内部API 团队于2011开源的一个项目。Hystrix 目前比较稳定，为 Netflix 公司的其他团队也在使用该项目。\n2018年11月，Hystrix 在GitHub上宣布，不会再开发新功能，推荐开发者使用其他仍然活跃的开源项目。维护模式的转变，但并不是说 Hystrix 没有了价值 ！！")]),s._v(" "),n("h2",{attrs:{id:"雪崩效应"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#雪崩效应"}},[s._v("#")]),s._v(" 雪崩效应")]),s._v(" "),n("p",[s._v("Hystrix 的目的就是解决服务间调用可能出现的 雪崩效应")]),s._v(" "),n("ul",[n("li",[s._v("雪崩效应的解决方案：")])]),s._v(" "),n("ol",[n("li",[n("p",[s._v("服务熔断 ：\n熔断机制是对雪崩效应问题的一种链路保护机制，当一个服务不可用或者响应超时，熔断该节点的服务调用，进行服务降级，快速返回错误响应信息，当检测到该节点恢复正常后，则恢复调用链路，通常和服务降级一起使用。\nHystrix 的熔断机制会监控微服务间的调用状况，当失败的调用到达一定阈值的时候 （默认是 5秒20次失败）就会启用熔断机制。")])]),s._v(" "),n("li",[n("p",[s._v("服务降级 ：\n服务降级是从系统整体考虑，当某个服务熔断后，该服务不在被调用时，客户端仍然可以发送请求，并且会有fallback响应。比如：阿里双11的时候，系统流量巨大，可以暂时关闭用户的游戏圈功能 ！\n服务降级主要目的是保证核心功能高可用、非核心功能短期内关闭使用（提示用户该功能暂时关闭，某某时间恢复该功能）")])]),s._v(" "),n("li",[n("p",[s._v("服务限流\n当服务为系统的核心功能时，不能使用熔断、降级来处理的时候，可以使用服务限流")]),s._v(" "),n("p",[s._v("限流措施：\n1. 限制总并发数 ， 比如： 数据库连接池、线程池\n2. 限制瞬时并发数   比如： nginx限制瞬时并发连接数\n3. 限制时间窗口内的平均速率 比如： Guava 的 RateLimiter 、 Nginx的 Limit_req模块，限制每秒平均速率\n4. 限制远程接口调用速率，限制MQ消费速率等")])])]),s._v(" "),n("h2",{attrs:{id:"hystrix-设置原则"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#hystrix-设置原则"}},[s._v("#")]),s._v(" Hystrix 设置原则")]),s._v(" "),n("ol",[n("li",[s._v("对依赖服务调用时出现的 调用延迟 和 调用失败 进行控制和容错保护")]),s._v(" "),n("li",[s._v("提供 fail-fast （快速失败）和快速恢复的支持")]),s._v(" "),n("li",[s._v("提供 fallback 优雅降级的支持")]),s._v(" "),n("li",[s._v("支持近实时的监控、报警以及运维操作")]),s._v(" "),n("li",[s._v("使用资源隔离技术，比如 bulkhead（舱壁隔离技术）、swimlane （泳道技术）、circuit breaker（短路技术）来限制任何一个依赖服务的故障影响")])]),s._v(" "),n("h2",{attrs:{id:"hystrix-资源隔离-线程池实现-、-信号量实现"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#hystrix-资源隔离-线程池实现-、-信号量实现"}},[s._v("#")]),s._v(" Hystrix 资源隔离 : 线程池实现 、 信号量实现")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("为什么要做资源隔离?\n比如一个tomcat配置的线程是1000个，当 用户服务 发送了一个请求分别调用了 订单服务 和 库存服务，比如这个时候下订单爆了，导致订单服务并发量激增，假设有500个线程来处理这个订单的并发量\n但是随着并发量的加大，订单服务崩溃的风险也会加大！最后导致了所有其他的系统也不可用。")])]),s._v(" "),n("li",[n("ol",[n("li",[s._v("线程池实现资源隔离：Thread 官方默认  HystrixCommand将会在单独的线程 (调用方 和 被调用方不是在同一个线程上)上执行，并发请求受线程池中线程数量的影响")])])]),s._v(" "),n("li",[n("ol",{attrs:{start:"2"}},[n("li",[s._v("信号量实现资源隔离：Semaphore 信号量 HystrixCommand将会在调用线程 (调用方 和 被调用方是在同一个线程上)上执行，开销相对较小，并发请求受信号量的个数限制")])])]),s._v(" "),n("li",[n("p",[s._v("配置：")])])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("hystrix.command.default.execution.isolation.strategy = Thread #Semaphore \n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("ul",[n("li",[s._v("二者区别\n"),n("a",{attrs:{"data-fancybox":"",title:"Hystrix资源隔离策略",href:"Hystrix资源隔离策略.png"}},[n("img",{attrs:{src:"Hystrix%E8%B5%84%E6%BA%90%E9%9A%94%E7%A6%BB%E7%AD%96%E7%95%A5.png",alt:"img.png"}})])])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("线程池隔离策略：\n    1. 调用线程和 HystrixCommand 不是同一个线程、并发请求受线程池（不是tomcat的线程池，是HystrixCommand的线程池）中的线程数限制，默认是10\n    2. 默认的隔离策略\n    3. HystrixCommand 线程无法获取到调用线程中 ThreadLocal 中的值\n\n信号量隔离策略：\n    1. 调用线程和 HystrixCommand 线程是同一个线程，默认最大并发请求数是10\n    2. 调用速度块，开销小，由于和调用线程处于同一个线程，所以必须确保调用的服务可用性足够高且返回快\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("注意： 如果发生找不到上下文运行时候的异常，可以考虑将隔离策略设置为：信号量隔离策略\n或者自定义隔离策略，重写请求，参考:"),n("RouterLink",{attrs:{to:"/java/springboot/#springboot-mdc-全链路调用日志追踪"}},[s._v("全链路调用日志追踪")])],1),s._v(" "),n("ul",[n("li",[s._v("适用场景")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("线程池隔离策略：适合绝大多数的场景，最大的好处对于网络请求的时候，如果有超时的话可以避免线程阻塞。比如对调用服务的请求服务，需要设置调用的 timeout 设置，\n信号量隔离策略：适合颞部访问，而且对内部一些较复杂的业务逻辑进行访问，并且系统内部的代码，其实并不涉及任何的网络请求，只要做普通的信号量限流就可以了。\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("ul",[n("li",[s._v("代码展示")])]),s._v(" "),n("ol",[n("li",[s._v("线程池控制资源隔离")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('package com.qingwang.user.web.controller;\n\nimport com.netflix.hystrix.*;\n\n/**\n * 版权所有  copyright© 蒙大拿\n *\n * @author mqz\n * @date 2023/2/23\n * @about https://www.gitee.com/DemoMeng\n * @description\n */\npublic class HystrixIsolationThreadTest extends HystrixCommand {\n\n\n    protected HystrixIsolationThreadTest() {\n        super(\n                HystrixCommand.Setter.withGroupKey(HystrixCommandGroupKey.Factory.asKey("thread-isolation-1"))\n                .andCommandKey(HystrixCommandKey.Factory.asKey("thread-isolation-k1"))\n                .andThreadPoolKey(HystrixThreadPoolKey.Factory.asKey("thread-isolation-thread-pool-key"))\n                .andThreadPoolPropertiesDefaults(HystrixThreadPoolProperties.Setter()\n                                .withCoreSize(5)// 核心的线程数\n                                .withKeepAliveTimeMinutes(60)//当线程池线程数大于核心线程数，此是多余空闲线程在终止前等待新任务的最长时间\n                                .withMaxQueueSize(5)// 最大队列数\n                                .withQueueSizeRejectionThreshold(2)//拒绝处理策略\n                )\n                .andCommandPropertiesDefaults(HystrixCommandProperties.Setter()\n                        .withCircuitBreakerEnabled(true)//是否开启熔断机制\n                        .withCircuitBreakerSleepWindowInMilliseconds(3000)//熔断器开启3秒后关闭\n                        .withExecutionIsolationStrategy(HystrixCommandProperties.ExecutionIsolationStrategy.THREAD)// 资源隔离策略\n                )\n        );\n    }\n\n\n    \n    @Override\n    protected Object run() throws Exception {\n        // 具体调用服务的代码写在这里\n    \n        return null;\n    }\n}\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br")])]),n("ol",{attrs:{start:"2"}},[n("li",[s._v("信号量控制资源隔离")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('package com.qingwang.user.web.controller;\n\nimport com.netflix.hystrix.HystrixCommand;\nimport com.netflix.hystrix.HystrixCommandGroupKey;\nimport com.netflix.hystrix.HystrixCommandKey;\nimport com.netflix.hystrix.HystrixCommandProperties;\n\n/**\n * 版权所有  copyright© 蒙大拿\n *\n * @author mqz\n * @date 2023/2/23\n * @about https://www.gitee.com/DemoMeng\n * @description\n */\npublic class HystrixIsolationSemaphoreTest extends HystrixCommand {\n    protected HystrixIsolationSemaphoreTest() {\n        super(HystrixCommand.Setter.withGroupKey(HystrixCommandGroupKey.Factory.asKey("semaphore-isolation-1"))\n                .andCommandKey(HystrixCommandKey.Factory.asKey("semaphore-isolation-k1"))\n                .andCommandPropertiesDefaults(HystrixCommandProperties.Setter()\n                        // 开启熔断机制\n                        .withCircuitBreakerEnabled(true)\n                        // 熔断器开启3s后关闭\n                        .withCircuitBreakerSleepWindowInMilliseconds(3000)\n                        // 设置隔离策略\n                        .withExecutionIsolationStrategy(HystrixCommandProperties.ExecutionIsolationStrategy.SEMAPHORE)));\n    }\n\n    @Override\n    protected Object run() throws Exception {\n        // 具体调用服务的代码写在这里\n        return null;\n    }\n}\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br")])]),n("h2",{attrs:{id:"hystrix-内部原理-工作流程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#hystrix-内部原理-工作流程"}},[s._v("#")]),s._v(" Hystrix 内部原理/工作流程")]),s._v(" "),n("p",[n("a",{attrs:{"data-fancybox":"",title:"hystrix工作流程",href:"hystrix工作流程.png"}},[n("img",{attrs:{src:"hystrix%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B.png",alt:"img.png"}})])]),s._v(" "),n("ul",[n("li",[n("ol",[n("li",[s._v("构建一个command 对象: HystrixCommand 或者 HystrixObservableCommand ，将请求封装到 Command对象中")])])])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("HystrixCommand :  调用请求逻辑写在 run() 方法，并且由新创建的线程执行，并且只能发送单条数据结果。\nHystrixObservableCommand : 请求逻辑写在 construct() 方法，并且由调用线程执行，并且可以返回多条数据结果。\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("ul",[n("li",[n("ol",{attrs:{start:"2"}},[n("li",[s._v("执行 command : 执行 command 就可以发起一次依赖服务的调用，需要执行如下的方法的其中一个即可：")])])])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("     HystrixCommand.execute(); // 同步调用，需要等被调用服务全部返回，才能得到结果\n     HystrixCommand.queue(); //异步调用，返回 Future 可以获取到单条结果\n     \n     // Hot Observable 命令会立即执行，当 observable 每次订阅的时候都会重放他的行为\n     // 订阅一个 observable 对象，observable代表是依赖服务返回的结果，获取到一个那个代表结果的 observable 对象的拷贝对象\n     HystrixObservableCommand.observe(); \n     \n     // Code Observable:命令不会被立即执行，只有当所有的订阅者都订阅它之后才会执行 \n     //返回一个 Observable 对象，如果我们订阅这个对象，就会执行 command 并且获取返回结果\n     HystrixObservableCommand.toObservable(); \n     \n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("ul",[n("li",[n("ol",{attrs:{start:"3"}},[n("li",[s._v("检查是否开启缓存 ： 如果 command 开启了请求缓存 Request Cache 而且这个调用的结果也在缓存中存在，那么直接将缓存结果返回，否则执行接下来的流程")])])]),s._v(" "),n("li",[n("ol",{attrs:{start:"4"}},[n("li",[s._v("断路器检查： 包含了是否开启了短路器、 断路器健康检查（统计所有结果）。也就是这个断路器打开了，那么Hystrix就不会执行这个command，而是直接执行fallback机制，返回降级结果。")])])]),s._v(" "),n("li",[n("ol",{attrs:{start:"5"}},[n("li",[s._v("检查线程池、信号量是否满：如果这个 command 线程池和队列队列已经满了，或者semaphore 信号量已满，那么也不会执行command，而是直接执行fallback机制，返回降级结果，同时会将该信息发送给 断路器健康检查 进行统计")])])]),s._v(" "),n("li",[n("ol",{attrs:{start:"6"}},[n("li",[s._v("执行 command 方法：\nHystrixObservableCommand.construct()\nHystrixCommand.run()\n如果是采用线程池的方式，并且 construct() 方法 或 run() 方法执行超过了 timeout 的时长，那么command所在的线程会抛出一个 TimeoutException\n这时候会执行 fallback 降级机制。另外一种情况是 construct() 方法 和 run() 方法抛出了其他异常，那么也会走fallback降级机制，且所有的异常情况、成功情况均发给短路器进行健康统计")])])]),s._v(" "),n("li",[n("ol",{attrs:{start:"7"}},[n("li",[s._v("断路器健康检查\nHystrix 会把每一次依赖服务的调用成功、失败、异常、超时异常的情况发送给 circuit breaker 断路器。断路器就会根据这些时间进行统计，根据异常事件发生的比例来决定是否要进行短路（熔断）。\n如果打开了断路器，那么在接下来的一段时间内，会直接短路，并且走fallback 机制\n如果在之后，断路器尝试执行 command ，调用没有出错，返回了正常结果，那么断路器就会把短路关闭。")])])]),s._v(" "),n("li",[n("ol",{attrs:{start:"8"}},[n("li",[s._v("fallback 降级机制")])])])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    1. 触发降级机制的情况：\n        断路器处于打开的状态\n        线程池/队列/semaphore 满了 \n        command执行超时\n        run/construct 方法执行抛出了异常\n     \n    2. 实现方法：\n        HystrixCommand 中 重写 getFallback() 方法\n        HystrixObservableCommand 中 resumeWithFallback() 方法\n        \n        如果没有实现 fallback 方法，或者fallback抛出了异常，Hystrix会返回一个空的 Observable ，但是没有任何数据。\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("ul",[n("li",[n("ol",{attrs:{start:"9"}},[n("li",[s._v("timeout超时机制")])])])]),s._v(" "),n("p",[s._v("yml配置文件")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("hystrix:\n  command:\n    default: #设置所有服务 也可以针对某个模块\n      execution:\n        isolation:\n          thread:\n            timeoutInMilliseconds: 4000 # 设置hystrix的超时时间为4000ms\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])])])}),[],!1,null,null,null);a.default=e.exports}}]);