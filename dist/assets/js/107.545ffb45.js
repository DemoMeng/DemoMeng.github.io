(window.webpackJsonp=window.webpackJsonp||[]).push([[107],{497:function(e,s,t){"use strict";t.r(s);var r=t(54),a=Object(r.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"prometheus"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#prometheus"}},[e._v("#")]),e._v(" Prometheus")]),e._v(" "),t("p",[e._v("Prometheus 是一个开放性的监控解决方案，用户可以非常方便的安装和使用 Prometheus 并且能够非常方便的对其进行扩展。\nPrometheus基于Golang编写，编译后的软件包，不依赖于任何的第三方依赖。用户只需要下载对应平台的二进制包，解压并且添加基本的配置即可正常启动Prometheus Server。")]),e._v(" "),t("h2",{attrs:{id:"prometheus-架构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#prometheus-架构"}},[e._v("#")]),e._v(" Prometheus 架构")]),e._v(" "),t("p",[t("a",{attrs:{"data-fancybox":"",title:"Prometheus架构",href:"Prometheus架构.png"}},[t("img",{attrs:{src:"Prometheus%E6%9E%B6%E6%9E%84.png",alt:"img.png"}})])]),e._v(" "),t("ul",[t("li",[t("p",[e._v("Prometheus Server：\nPrometheus Server 是 Prometheus的核心组件，负责实现对监控数据的获取，存储以及查询。Prometheus Server 可以通过静态配置管理监控目标，也可以配合使用 Service Discovery\n的方式动态管理监控目标，并从这些监控目标中获取监控数据，其次Prometheus Server需要对采集的监控数据进行存储。\nPrometheus Server 本身就是一个时序数据库，将采集的监控数据按照时间顺序存储在本地磁盘中，最后 Prometheus Server 对外提供了自定义的 PromQL语言，实现对数据的查询和分析\nPrometheus Server内置的Express Browser UI，通过这个UI可以直接通过PromQL实现数据的查询以及可视化。\nPrometheus Server的联邦集群能力可以使其从其他的Prometheus Server实例中获取数据，因此在大规模监控的情况下，可以通过联邦集群以及功能分区的方式对Prometheus Server进行扩展。")])]),e._v(" "),t("li",[t("p",[e._v("Exporter：\nExporter将监控数据采集的断电通过HTTP服务形式暴露给 Prometheus Server ，Prometheus Server通过访问该 Exporter提供的 Endpoint断点，即可获取到监控的数据。\nExporter分类：\n1. 直接采集：这一类Exporter直接内置了对Prometheus监控的支持，比如cAdvisor，Kubernetes，Etcd，Gokit等，都直接内置了用于向Prometheus暴露监控数据的端点。\n2. 间接采集：间接采集，原有监控目标并不直接支持Prometheus，因此我们需要通过Prometheus提供的Client Library编写该监控目标的监控采集程序。例如： Mysql Exporter，JMX Exporter，Consul Exporter等。")])]),e._v(" "),t("li",[t("p",[e._v("AlterManager：\n在Prometheus Server中支持基于PromQL创建告警规则，如果满足PromQL定义的规则，则会产生一条告警，而告警的后续处理流程则由AlertManager进行管理。\n在AlertManager中我们可以与邮件，Slack等等内置的通知方式进行集成，也可以通过Webhook自定义告警处理方式。AlertManager即Prometheus体系中的告警处理中心。")])]),e._v(" "),t("li",[t("p",[e._v("PushGateway\n由于Prometheus数据采集基于Pull模型进行设计，因此在网络环境的配置上必须要让Prometheus Server能够直接与Exporter进行通信。\n当这种网络需求无法直接满足时，就可以利用PushGateway来进行中转。可以通过PushGateway将内部网络的监控数据主动Push到Gateway当中。\n而Prometheus Server则可以采用同样Pull的方式从PushGateway中获取到监控数据")])])]),e._v(" "),t("h2",{attrs:{id:"prometheus简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#prometheus简介"}},[e._v("#")]),e._v(" Prometheus简介")]),e._v(" "),t("p",[e._v("Prometheus受启发于Google的Brogmon监控系统（相似的Kubernetes是从Google的Brog系统演变而来），\n从2012年开始由前Google工程师在Soundcloud以开源软件的形式进行研发，并且于2015年早期对外发布早期版本。\n2016年5月继Kubernetes之后成为第二个正式加入CNCF基金会的项目，同年6月正式发布1.0版本。\n2017年底发布了基于全新存储层的2.0版本，能更好地与容器平台、云平台配合。")]),e._v(" "),t("h2",{attrs:{id:"监控的目标"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#监控的目标"}},[e._v("#")]),e._v(" 监控的目标")]),e._v(" "),t("p",[e._v("监控系统需要能够有效的支持白盒监控和黑盒监控，通过白盒能够了解其内部实际的运行状态，通过监控指标的观察能够预判可能出现的问题，\n从而对潜在不确定因素进行优化，而黑盒监控，常见的HTTP探针、TCP探针等。可以在系统或者服务在发生故障时能够快速通知相关人员进行处理。\n通过建立完善的监控体系，从而达到以下目的："),t("br"),e._v("\n长期趋势分析：通过对监控样本数据的持续收集和统计，对监控指标进行长期趋势分析。例如，通过对磁盘空间增长率的判断，我们可以提前预测在未来什么时间节点上需要对资源进行扩容。\n对照分析：两个版本的系统运行资源使用情况的差异如何？在不同容量情况下系统的并发和负载变化如何？通过监控能够方便的对系统进行跟踪和比较。\n告警：当系统出现或者即将出现故障时，监控系统需要迅速反应并通知管理员，从而能够对问题进行快速的处理或者提前预防问题的发生，避免出现对业务的影响。\n故障分析与定位：当问题发生后，需要对问题进行调查和处理。通过对不同监控监控以及历史数据的分析，能够找到并解决根源问题。\n数据可视化：通过可视化仪表盘能够直接获取系统的运行状态、资源使用情况、以及服务运行状态等直观的信息。")]),e._v(" "),t("h2",{attrs:{id:"prometheus-的优势"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#prometheus-的优势"}},[e._v("#")]),e._v(" Prometheus 的优势")]),e._v(" "),t("p",[e._v("1.易于管理： Prometheus 核心部分只有一个单独的二进制，不存在任何第三方依赖（数据库、缓存等）。唯一需要的就是本地磁盘，因此不存在潜在的级联故障风险。\nPrometheus 基于 Pull模型的架构方法，可以在任何地方（本地电脑、开发环境、测试环境）搭建我们的监控系统，对于一些复杂的情况，还可以使用Prometheus服务发现（Service Discovery）的能力动态管理监控目标")]),e._v(" "),t("p",[e._v("2.监控服务的内部运行状态： Prometheus 用户可以监控服务内部状态，基于Prometheus丰富的Client库，用户可以轻松的在应用程序中添加对 Prometheus的支持，从而让用户可以获取服务和应用内部的真正运行状态。\n"),t("a",{attrs:{"data-fancybox":"",title:"111",href:"Prometheus监控服务内部状态.png"}},[t("img",{attrs:{src:"Prometheus%E7%9B%91%E6%8E%A7%E6%9C%8D%E5%8A%A1%E5%86%85%E9%83%A8%E7%8A%B6%E6%80%81.png",alt:"img.png"}})])]),e._v(" "),t("p",[e._v("3.强大的数据模型： 所有采集的监控数据均以指标（metric）的形式保存在内置的时间序列数据库中（TSDB）。\n所有的样本除了基本的指标名称之外，还包含一组用于描述该样本的特征的标签\n如下：")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("http_request_status{code='200',content_path='/api/path', environment='produment'} => [value1@timestamp1,value2@timestamp2...]\nhttp_request_status{code='200',content_path='/api/path2', environment='produment'} => [value1@timestamp1,value2@timestamp2...]\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("p",[e._v("每一条时间序列由指标名称（Metric Name） 和 一组标签 （Labels）唯一标识，每条时间序列按照时间的先后顺序存储一系列的样本值。\n表示纬度的标签可能来源于你监控对象的状态，比如 code=404 或者 content_path = '/api/path2' 。也可能来源你的环境定义，比如 environment=produment，基于这些标签（Labels）我们可以方便对监控数据进行聚合、裁剪、过滤")]),e._v(" "),t("ol",{attrs:{start:"4"}},[t("li",[e._v("强大的查询语言 PromQL\nPrometheus内置强大的数据查询语言 PromQL。通过PromQL可以实现对监控数据的查询、聚合。同时 PromQL也被应用于数据可视化（Grafana）及告警中。\n通过PromQL可以轻松回答类似于以下问题：")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("在过去一段时间中95%应用延迟时间的分布范围？\n预测在4小时后，磁盘空间占用大致会是什么情况？\nCPU占用率前5位的服务有哪些？(过滤)\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br")])]),t("ol",{attrs:{start:"5"}},[t("li",[e._v("高效\n对于监控系统而言，大量的监控任务必然导致有大量的数据产生。而Prometheus可以高效地处理这些数据，对于单一Prometheus Server实例而言它可以处理：")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("数以百万的监控指标\n每秒处理数十万的数据点。\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("ol",{attrs:{start:"6"}},[t("li",[t("p",[e._v("可扩展\nPrometheus是如此简单，因此你可以在每个数据中心、每个团队运行独立的Prometheus Sevrer。\nPrometheus对于联邦集群的支持，可以让多个Prometheus实例产生一个逻辑集群，当单实例Prometheus Server处理的任务量过大时，\n通过使用功能分区(sharding)+联邦集群(federation)可以对其进行扩展。")])]),e._v(" "),t("li",[t("p",[e._v("易于集成\n使用 Prometheus 可以快速搭建监控服务，并且可以非常方便的在应用程序中进行集成。目前支持： Java 、 JMX 、 Python 、GO 、Ruby 、 .Net 、Node.js等语言的客户端SDK。\n基于这些SDK可以快速让应用程序纳入到 Prometheus的监控当中，或者开发自己的监控数据收集程序。同时这些客户端收集的监控数据，不仅仅支持 Prometheus，还能支持 Graphite 这些其他的监控工具\n同时Prometheus还支持与其他的监控系统进行集成：Graphite， Statsd， Collected， Scollector， muini， Nagios等。\nPrometheus 还提供了大量第三方实现的监控数据采集支持： MySQL ，RabbitMQ， Redis， JMX， CloudWatch， EC2， PostgresSQL， Haskell， Bash， SNMP， Consul， Haproxy， Mesos， Bind， CouchDB， Django， Memcached，  RethinkDB， Rsyslog")])]),e._v(" "),t("li",[t("p",[e._v("可视化\nPrometheus Server中自带了一个 Prometheus UI ，通过这个UI可以很方便的直接对数据进行查询、并且支持以图形化的形式展示数据，同时 Prometheus 还提供了一个独立完整的基于 Ruby On Rails的 Dashboard 解决方案 Promdash。\n最新的 Grafana 可视化工具也已经提供了完整的 Prometheus 支持，基于 Grafana可以创建更加精美的监控图标，基于 Prometheus 提供的 API还可以实现自己的监控可视化 UI")])])]),e._v(" "),t("p",[e._v("9.开放性\n通常来说当我们需要监控一个应用程序时，一般需要该应用程序提供对相应监控系统协议的支持。因此应用程序会与所选择的监控系统进行绑定。为了减少这种绑定所带来的限制。对于决策者而言要么你就直接在应用中集成该监控系统的支持，要么就在外部创建单独的服务来适配不同的监控系统。\n而对于Prometheus来说，使用Prometheus的client library的输出格式不止支持Prometheus的格式化数据，也可以输出支持其它监控系统的格式化数据，比如Graphite。\n因此你甚至可以在不使用Prometheus的情况下，采用Prometheus的client library来让你的应用程序支持监控数据采集。")]),e._v(" "),t("h2",{attrs:{id:"exporter"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#exporter"}},[e._v("#")]),e._v(" Exporter")]),e._v(" "),t("p",[e._v("在 Prometheus 的架构设计中，Prometheus Server并不能直接服务监控特定的目标，其主要任务是负责数据的收集和存储，并且对外提供数据查询支持。\n因此为了能监控到某些特定的东西，如主机的CPU使用率，我们需要使用到Exporter。Prometheus会周期性的从Exporter暴露的HTTP服务地址（通常是 /metrics）\n拉取监控样本数据。 Exporter是一个相对开放的概念，其可以是独立与性能的程序，并且能独立于监控目标之外，也可以是在监控目标中。\n只要能够向Prometheus提供标准格式的监控样本数据即可。")]),e._v(" "),t("h2",{attrs:{id:"prometheus-安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#prometheus-安装"}},[e._v("#")]),e._v(" prometheus 安装")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("二进制包安装\n非Docker用户，可以从https://prometheus.io/download/找到最新版本的Prometheus Sevrer软件包")])]),e._v(" "),t("li",[t("p",[e._v("docker run 启动容器 安装：")])])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("docker run -p 9090:9090 -v /etc/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml prom/prometheus:latest\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("ul",[t("li",[e._v("docker-compose 启动容器，配置文件yml：")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('version: "3"\nservices:\n  prometheus:\n    image: prom/prometheus:latest\n    container_name: prometheus-mqz\n    ports:\n      - "9090:9090"\n    volumes:\n      - /etc/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml\n    privileged: true\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br")])]),t("ul",[t("li",[e._v("配置文件 prometheus.yml")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('# my global config\nglobal:\n  scrape_interval: 15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.\n  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.\n  # scrape_timeout is set to the global default (10s).\n\n# Alertmanager configuration\nalerting:\n  alertmanagers:\n    - static_configs:\n        - targets:\n          # - alertmanager:9093\n\n# Load rules once and periodically evaluate them according to the global \'evaluation_interval\'.\nrule_files:\n  # - "first_rules.yml"\n  # - "second_rules.yml"\n\n# A scrape configuration containing exactly one endpoint to scrape:\n# Here it\'s Prometheus itself.\nscrape_configs:\n  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.\n  - job_name: "prometheus"\n\n    # metrics_path defaults to \'/metrics\'\n    # scheme defaults to \'http\'.\n\n    static_configs:\n      - targets: ["localhost:9090"]\n  - job_name: "node"\n    static_configs:\n      - targets: ["192.168.2.11:9100"]\n  - job_name: "node-mysql"\n    static_configs:\n      - targets: ["192.168.2.11:9104"]\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br"),t("span",{staticClass:"line-number"},[e._v("17")]),t("br"),t("span",{staticClass:"line-number"},[e._v("18")]),t("br"),t("span",{staticClass:"line-number"},[e._v("19")]),t("br"),t("span",{staticClass:"line-number"},[e._v("20")]),t("br"),t("span",{staticClass:"line-number"},[e._v("21")]),t("br"),t("span",{staticClass:"line-number"},[e._v("22")]),t("br"),t("span",{staticClass:"line-number"},[e._v("23")]),t("br"),t("span",{staticClass:"line-number"},[e._v("24")]),t("br"),t("span",{staticClass:"line-number"},[e._v("25")]),t("br"),t("span",{staticClass:"line-number"},[e._v("26")]),t("br"),t("span",{staticClass:"line-number"},[e._v("27")]),t("br"),t("span",{staticClass:"line-number"},[e._v("28")]),t("br"),t("span",{staticClass:"line-number"},[e._v("29")]),t("br"),t("span",{staticClass:"line-number"},[e._v("30")]),t("br"),t("span",{staticClass:"line-number"},[e._v("31")]),t("br"),t("span",{staticClass:"line-number"},[e._v("32")]),t("br"),t("span",{staticClass:"line-number"},[e._v("33")]),t("br"),t("span",{staticClass:"line-number"},[e._v("34")]),t("br"),t("span",{staticClass:"line-number"},[e._v("35")]),t("br")])]),t("p",[t("a",{attrs:{"data-fancybox":"",title:"111",href:"Prometheus主界面.png"}},[t("img",{attrs:{src:"Prometheus%E4%B8%BB%E7%95%8C%E9%9D%A2.png",alt:"img.png"}})])]),e._v(" "),t("p",[t("a",{attrs:{"data-fancybox":"",title:"111",href:"Prometheus-target监控界面.png"}},[t("img",{attrs:{src:"Prometheus-target%E7%9B%91%E6%8E%A7%E7%95%8C%E9%9D%A2.png",alt:"img.png"}})])]),e._v(" "),t("h2",{attrs:{id:"使用-node-exporter-采集主机运行数据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用-node-exporter-采集主机运行数据"}},[e._v("#")]),e._v(" 使用 Node Exporter 采集主机运行数据")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("定义：\nnode_exporter 是 Prometheus的一个 exporter，主要用来收集服务器硬件资源的使用情况。\n这个会部署在被监控的服务器上，即 Grafana 和 Prometheus会独立部署在一台服务器上（这个服务器可以昨来当监控系统的服务器），\nnode_exporter则被部署在被监控的服务器上，收集监控数据给 Prometheus，然后 Grafana通过这些数据根据制定的 dashboard 展示出来。")])]),e._v(" "),t("li",[t("p",[e._v("安装：")])])]),e._v(" "),t("ol",[t("li",[e._v("安装包安装：")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("1. node_export 全部版本下载地址： https://github.com/prometheus/node_exporter/releases?utm_source=testingpai.com\n2. 选择对应服务器所需版本下载，然后解压\n3. 执行 ./node_exporter 启动node_exporter程序，默认端口 9100\n\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br")])]),t("ol",{attrs:{start:"2"}},[t("li",[e._v("docker容器安装")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('version: "3"\nservices:\n  node-exporter:\n    image: prom/node-exporter:latest\n    container_name: node-exporter-mqz\n    ports:\n      - "9100:9100"\n    volumes:\n      - "/proc:/host/proc:ro"\n      - "/sys:/host/sys:ro"\n      - "/:/rootfs:ro"\n    privileged: true\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br")])]),t("p",[e._v("安装成功控制台输出：\n"),t("a",{attrs:{"data-fancybox":"",title:"111",href:"node-exporter安装成功.png"}},[t("img",{attrs:{src:"node-exporter%E5%AE%89%E8%A3%85%E6%88%90%E5%8A%9F.png",alt:"img.png"}})]),e._v("\n访问 http://192.168.2.11:9100/metric 获取到当前主机的所有监控看数据，如下结果：\n"),t("a",{attrs:{"data-fancybox":"",title:"111",href:"node-exporter访问地址.png"}},[t("img",{attrs:{src:"node-exporter%E8%AE%BF%E9%97%AE%E5%9C%B0%E5%9D%80.png",alt:"img.png"}})])]),e._v(" "),t("ul",[t("li",[e._v("Prometheus 从 Node Exporter收集监控数据\n1.修改 Prometheus配置文件 ： /etc/prometheus/prometheus.yml ，配置完后需要重新启动服务（容器）。")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('scrape_configs:\n  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.\n  - job_name: "prometheus"\n    # metrics_path defaults to \'/metrics\'\n    # scheme defaults to \'http\'.\n    static_configs:\n      - targets: ["localhost:9090"]\n  - job_name: "node"\n    static_configs:\n      - targets: ["192.168.2.11:9100"]\n  - job_name: "node-mysql"\n    static_configs:\n      - targets: ["192.168.2.11:9104"]\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br")])]),t("ol",{attrs:{start:"2"}},[t("li",[e._v("Prometheus控制台查看是否成功添加了收集数据的配置\n"),t("a",{attrs:{"data-fancybox":"",title:"111",href:"Prometheus查看新加的配置监控任务.png"}},[t("img",{attrs:{src:"Prometheus%E6%9F%A5%E7%9C%8B%E6%96%B0%E5%8A%A0%E7%9A%84%E9%85%8D%E7%BD%AE%E7%9B%91%E6%8E%A7%E4%BB%BB%E5%8A%A1.png",alt:"img.png"}})])])]),e._v(" "),t("p",[e._v("当我们需要采集不同的监控指标，如：主机、Mysql、Nginx时，我们只需要运行相对应的监控采集程序，并且让 Prometheus Server 知道这些Exporter实例访问的地址。\n在 Prometheus 中，每一个暴露监控样本数据的 HTTP 服务称为一个实例。例如当前主机上运行的 Node-Exporter可以被称为一个实例。\n而一组用于相同采集目的的实例，或者同一个采集进程的多个副本则通过一个一个任务(Job)进行管理。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("* job: node\n    * instance 2: 1.2.3.4:9100\n    * instance 4: 5.6.7.8:9100\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br")])]),t("h2",{attrs:{id:"docker-安装-mysql-exporter"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-安装-mysql-exporter"}},[e._v("#")]),e._v(" docker 安装 mysql-exporter")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('version: \'2\'\nnetworks:\n    monitor:\n        driver: bridge\nservices:\n    mysql-exporter:\n        image: prom/mysqld-exporter\n        container_name: mysql-exporter\n        hostname: mysql-exporter\n        restart: always\n        ports:\n            - "9104:9104"\n        networks:\n            - my-mysql-network\n        environment:\n            DATA_SOURCE_NAME: "root:mengqizhang@(192.168.2.11:3306)/"\nnetworks:\n        my-mysql-network:\n            driver: bridge\n\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br"),t("span",{staticClass:"line-number"},[e._v("17")]),t("br"),t("span",{staticClass:"line-number"},[e._v("18")]),t("br"),t("span",{staticClass:"line-number"},[e._v("19")]),t("br"),t("span",{staticClass:"line-number"},[e._v("20")]),t("br")])])])}),[],!1,null,null,null);s.default=a.exports}}]);