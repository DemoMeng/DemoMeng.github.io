(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{441:function(s,n,a){"use strict";a.r(n);var e=a(54),r=Object(e.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"灰度发布"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#灰度发布"}},[s._v("#")]),s._v(" 灰度发布")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://gitee.com/DemoMeng/qingwang-gateway.git",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://gitee.com/DemoMeng/qingwang-gateway.git"),a("OutboundLink")],1)]),s._v(" "),a("h2",{attrs:{id:"_1-nginx灰度发布实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-nginx灰度发布实现"}},[s._v("#")]),s._v(" 1. nginx灰度发布实现：")]),s._v(" "),a("p",[a("a",{attrs:{"data-fancybox":"",title:"111",href:"nginx灰度发布cookie实现.png"}},[a("img",{attrs:{src:"nginx%E7%81%B0%E5%BA%A6%E5%8F%91%E5%B8%83cookie%E5%AE%9E%E7%8E%B0.png",alt:"nginx灰度发布cookie实现.png"}})])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('#自定义日志输出格式\nlog_format json \'{"@timestamp":"$time_iso8601",\'\n   \'"host":"$server_addr",\'\n   \'"clientip":"$remote_addr",\'\n   \'"request":"$request",\'\n   \'"size":$body_bytes_sent,\'\n   \'"responsetime":$request_time,\'\n   \'"upstreamtime":"$upstream_response_time",\'\n   \'"upstreamhost":"$upstream_addr",\'\n   \'"http_host":"$host",\'\n   \'"url":"$uri",\'\n   \'"referer":"$http_referer",\'\n   \'"agent":"$http_user_agent",\'\n    \'"GET参数":"$args",\'\n    \'"请求URI":"$uri",\'\n    \'"客户端地址":"$remote_addr",\'\n    \'"BODY参数":"$request_body",\'\n    \'"请求方法":"$request_method",\'\n    \'"服务端名":"$server_name",\'\n   \'"status":"$status"}\';\n\n# 灰度实例\nupstream gray_server{\n server 139.155.180.57:1003;\n}\n# 正式实例\nupstream prod_server{\nserver 139.155.180.57:7003;\n}\n\nserver {\n        listen     80 ;\n        server_name  qwuser.mengqizhang.xyz;\n        access_log  /var/log/nginx/access-json.log  json;\n        set $server prod_server;\n        # 根据请求头的version字段值进行判断请求打到哪个服务实例上\n        #if ( $http_version = "1" ) {\n        #       set $server gray_server;\n        #}\n\n        # 根据客户端ip指定使用灰度实例\n        # 其中 $remote_addr是nginx的内置变量，上面的自定义日志格式也使用了nginx自定义变量，具体参见 better-elk项目里的[Nginx日志输出到Logstash配置.md]\n        if ( $remote_addr ~ \'125.118.123.246\' ){\n          set $server gray_server;\n        }\n\n        # 因为需要登陆，在登陆逻辑中判断用户的活跃度、访问频率、忍受成都是否为可以使用灰度的用户 （或者使用redis的zset维护一些使用灰度用户）\n        # 前端请求登陆之后，登陆成功，返回常规用户信息外，返回一个version=gray代表该用户可以使用灰度环境，前端获取该值并且把该值放到cookie中，每次请求都带上，\n        # 这样就能成功界定灰度用户的范围\n        # 根据cookie的参数判断指定客户端使用灰度\n        if ( $cookie_version = \'gray\' ) {\n                set $server gray_server;\n        }\n\n        if ( $cookie_version = \'prod\' ) {\n                set $server prod_server;\n        }\n        \n\n\n        location / {\n            proxy_pass http://$server;\n            proxy_set_header Host $host;\n            proxy_set_header X-Real-IP $remote_addr;\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        }\n}  \n\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br"),a("span",{staticClass:"line-number"},[s._v("55")]),a("br"),a("span",{staticClass:"line-number"},[s._v("56")]),a("br"),a("span",{staticClass:"line-number"},[s._v("57")]),a("br"),a("span",{staticClass:"line-number"},[s._v("58")]),a("br"),a("span",{staticClass:"line-number"},[s._v("59")]),a("br"),a("span",{staticClass:"line-number"},[s._v("60")]),a("br"),a("span",{staticClass:"line-number"},[s._v("61")]),a("br"),a("span",{staticClass:"line-number"},[s._v("62")]),a("br"),a("span",{staticClass:"line-number"},[s._v("63")]),a("br"),a("span",{staticClass:"line-number"},[s._v("64")]),a("br"),a("span",{staticClass:"line-number"},[s._v("65")]),a("br"),a("span",{staticClass:"line-number"},[s._v("66")]),a("br"),a("span",{staticClass:"line-number"},[s._v("67")]),a("br"),a("span",{staticClass:"line-number"},[s._v("68")]),a("br")])]),a("h2",{attrs:{id:"_2-spring-cloud-gateway-nacos-动态配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-spring-cloud-gateway-nacos-动态配置"}},[s._v("#")]),s._v(" 2. spring-cloud-gateway + nacos(动态配置)")]),s._v(" "),a("p",[a("a",{attrs:{"data-fancybox":"",title:"111",href:"springcloudgateway-灰度发布实现.png"}},[a("img",{attrs:{src:"springcloudgateway-%E7%81%B0%E5%BA%A6%E5%8F%91%E5%B8%83%E5%AE%9E%E7%8E%B0.png",alt:"springcloudgateway-灰度发布实现.png"}})])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("方式1： \n    1. 需要重写负载均衡算法，根据nacos动态变量判断请求打到灰度、正式实例\n    2. 修改过滤器\n    3. 配置nacos动态配置变量\n\n\n方式2：\n    1. 新建一个实例，端口不一致（springApplicationName也不一致？？）重新注册到注册中心\n    2. springCloudGateway按照之前的路由配置规则，复制一套，并且路由谓词新增一个cookie谓词，根据cookie里的version值判断请求打到那个节点上\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h2",{attrs:{id:"蓝绿部署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#蓝绿部署"}},[s._v("#")]),s._v(" 蓝绿部署")]),s._v(" "),a("ul",[a("li",[s._v("蓝绿部署，Blue Green Deployment ，是一种保证系统在不间断提供服务情况下上线新功能的部署方式")]),s._v(" "),a("li",[s._v("原理： 如何保证系统不间断提供服务，那就是同时部署两个集群，但只对外提供一个集群的服务，当需要升级的时候，切换集群进行升级。\n蓝绿部署无需停机，风险比较小。")]),s._v(" "),a("li",[s._v("大概步骤：")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("1. 部署集群1的应用（初始状态），将所有的外部请求都打到这个集群上\n2. 部署集群2的应用，集群2和集群1的代码不同，如新功能或者bug修复等\n3. 将流量从集群1切换到集群2\n4. 如集群2测试正常无误，则删除集群1应用，使用集群2对外提供服务\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("ul",[a("li",[s._v("因为在使用蓝绿部署的方式时，我们需要控制流量，所以我们需要借助路由服务，如 Nginx 等。")])]),s._v(" "),a("h2",{attrs:{id:"滚动部署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#滚动部署"}},[s._v("#")]),s._v(" 滚动部署")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("滚动部署， Rolling Update，和蓝绿部署不一样的是，滚动部署在更细的粒度下完成平滑的版本升级。")])]),s._v(" "),a("li",[a("p",[s._v("只需要一个集群，集群下不同的节点可以独立进行版本升级，如共有5个节点，我们先升级2个节点，升级完成后将该两个节点投入使用，周而复始\n直到所有的节点都为新版本")])]),s._v(" "),a("li",[a("p",[s._v("缺点")])])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("1. 没有一个确定无误的环境： 蓝绿部署我们能确保老环境是可以用的，而滚动部署无法确定哪个节点是正常的\n2. 若需要回滚，困难： 若节点多，服务请求大的情况下，回滚则变的很困难\n3. 节点扩容后，无法判断扩容后的节点是哪套代码。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h2",{attrs:{id:"金丝雀部署-灰度发布"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#金丝雀部署-灰度发布"}},[s._v("#")]),s._v(" 金丝雀部署 （灰度发布）")]),s._v(" "),a("ul",[a("li",[s._v("金丝雀部署的步骤：")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("    1. 准备好部署各个阶段的工件，包括：构建工件，测试脚本，配置文件和部署清单文件\n    2. 从负载均衡列表中移除掉“金丝雀”服务器\n    3. 升级“金丝雀”应用（切断原有流量并进行部署）\n    4. 对应用进行自动化测试\n    5. 将“金丝雀”服务器重新添加到负载均衡列表中（连通性和健康检查）\n    6. 如果“金丝雀”在线使用测试成功，升级剩余的其他服务器（否则就回滚）\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("在金丝雀部署中，常常按照用户量设置路由权重，例如 90% 的用户维持使用老版本，10% 的用户尝鲜新版本。\n不同版本应用共存，经常与 A/B 测试一起使用，用于测试选择多种方案。\n金丝雀部署比较典型的例子，就是我们在使用某个应用的时候，该应用邀请我们进行“内测”或者“新版本体验”，\n如果我们同意了，那么我们就成了金丝雀。")])])}),[],!1,null,null,null);n.default=r.exports}}]);