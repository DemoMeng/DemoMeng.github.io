(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{450:function(t,r,e){"use strict";e.r(r);var s=e(54),a=Object(s.a)({},(function(){var t=this,r=t.$createElement,e=t._self._c||r;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"docker-registry"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker-registry"}},[t._v("#")]),t._v(" docker-registry")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/DemoMeng/docker-registry",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/DemoMeng/docker-registry"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"搭建private-docker-repository"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#搭建private-docker-repository"}},[t._v("#")]),t._v(" 搭建private docker repository")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("\n 1. 构建registry的yml文件， ./docker-registry/docker-registry.yml ，后启动容器\n\n 2. 若搭建registy的服务器没有配置https访问的话，因为docker1.3x后docker registry交互默认使用的是HTTPS\n     因为私库没有配置https证书，所以是http的交互故而报错 ： \n            The push refers to repository [192.168.2.11:5040/nacos-gateway]\n            Get https://192.168.2.11:5040/v2/: http: server gave HTTP response to HTTPS client\n     \n     解决办法： \n        macOS：\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br")])]),e("p",[e("a",{attrs:{"data-fancybox":"",title:"111",href:"img-0.png"}},[e("img",{attrs:{src:"img-0.png",alt:"img.png"}})])]),t._v(" "),e("ul",[e("li",[t._v("其他：\n"),e("a",{attrs:{"data-fancybox":"",title:"111",href:"img_01.png"}},[e("img",{attrs:{src:"img_01.png",alt:"img_1.png"}})])])]),t._v(" "),e("h2",{attrs:{id:"推送镜像到私库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#推送镜像到私库"}},[t._v("#")]),t._v(" 推送镜像到私库：")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("原始镜像：\na. docker pull **\nb. 通过Dockerfile生成自己的镜像\n\n1. 把原始镜像打上私库的标签： docker tag 原始镜像:版本号 私库ip:端口/镜像名:版本号 ：\n   docker tag nginx:latest 192.168.2.11:5040/my-nginx:0.0.1\n\n2. 推送打好的镜像到私库：\n   docker push 192.168.2.11:5040/my-nginx:0.0.1\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br")])]),e("h2",{attrs:{id:"制作镜像并且上传到公开库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#制作镜像并且上传到公开库"}},[t._v("#")]),t._v(" 制作镜像并且上传到公开库")]),t._v(" "),e("ul",[e("li",[t._v("https://hub.docker.com/r/demomeng/docker-registry-web")])]),t._v(" "),e("ol",[e("li",[e("p",[t._v("制作镜像：\n前置条件： springBoot项目，及外部配置文件(后续通过挂载容器内进行启动)\na.基于Dockerfile构建一个jar的镜像，参考Dockerfile文件\nb.执行构建镜像： docker build -t better-restry-images:0.0.1 .\n"),e("a",{attrs:{"data-fancybox":"",title:"111",href:"img.png"}},[e("img",{attrs:{src:"docs/.vuepress/public/%E5%AE%B9%E5%99%A8%E5%8C%96/docker/fabric8%E7%9A%84%E6%89%93%E5%8C%85%E6%8F%92%E4%BB%B6.png",alt:"img.png"}})]),t._v(" "),e("a",{attrs:{"data-fancybox":"",title:"111",href:"img_1.png"}},[e("img",{attrs:{src:"img_1.png",alt:"img_1.png"}})])])]),t._v(" "),e("li",[e("p",[t._v("发布镜像： 和发布到私库registry一致\n前置条件： 在hub.docker.com 上新建好对应的仓库及撰写overview\na. 把本地镜像打成预上传的镜像：  docker image tag better-registry-images:0.0.1 demomeng/docker-regitry-web:0.0.1\n"),e("a",{attrs:{"data-fancybox":"",title:"111",href:"img_2.png"}},[e("img",{attrs:{src:"img_2.png",alt:"img_2.png"}})])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v(" b. 推送到hub.docker.com: docker push demomeng/docker-regitry-web\n")])])])])]),t._v(" "),e("p",[e("a",{attrs:{"data-fancybox":"",title:"111",href:"img_3.png"}},[e("img",{attrs:{src:"img_3.png",alt:"img_3.png"}})])]),t._v(" "),e("ol",{attrs:{start:"3"}},[e("li",[e("p",[t._v("完成：\n"),e("a",{attrs:{"data-fancybox":"",title:"111",href:"img_4.png"}},[e("img",{attrs:{src:"img_4.png",alt:"img_4.png"}})])])]),t._v(" "),e("li",[e("p",[t._v("后续：\n在别的服务器上使用该镜像，构建好docker-better-registry.yml文件即可\n注意：\n需要修改镜像地址！！")])])])])}),[],!1,null,null,null);r.default=a.exports}}]);