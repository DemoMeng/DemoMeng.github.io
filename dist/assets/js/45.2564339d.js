(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{433:function(e,n,i){"use strict";i.r(n);var a=i(54),t=Object(a.a)({},(function(){var e=this,n=e.$createElement,i=e._self._c||n;return i("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[i("h1",{attrs:{id:"openfeign声明是接口调用组件"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#openfeign声明是接口调用组件"}},[e._v("#")]),e._v(" openfeign声明是接口调用组件")]),e._v(" "),i("h2",{attrs:{id:"openfeign使用说明"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#openfeign使用说明"}},[e._v("#")]),e._v(" OpenFeign使用说明")]),e._v(" "),i("h3",{attrs:{id:"定义"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#定义"}},[e._v("#")]),e._v(" 定义")]),e._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",[i("code",[e._v("feign是一个声明伪http客户端\nopenfeign 默认集成了ribbon实现RB效果，\nopenfeign 支持Hystrix的fallback（集成到了FeignClient中）\nopenfeign 支持HTTP请求和响应的压缩\nopenfeign 支持name（服务名，FeignClient(name='service-a')）级别的配置\nopenfeign 重试机制，可以不依赖注册中心独立运行，url支持占位符\n")])])]),i("h3",{attrs:{id:"使用步骤"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#使用步骤"}},[e._v("#")]),e._v(" 使用步骤：")]),e._v(" "),i("ul",[i("li",[i("p",[e._v("1.服务提供方：")]),e._v(" "),i("ol",[i("li",[e._v("编写一个http接口")])])]),e._v(" "),i("li",[i("p",[e._v("2.服务消费方：")]),e._v(" "),i("ol",[i("li",[e._v("引入spring-cloud 、spring-cloud-openfeign依赖")]),e._v(" "),i("li",[e._v("定义feign接口，并使用@EnableFeign声明该接口为feign的接口，且参数名、接口地址，需要和服务提供方一致")]),e._v(" "),i("li",[e._v("声明服务为feign客户端（启动类上加入@EnableFeignClients自动配置注解，并且配置扫描包，扫描定义的feign接口）")])])]),e._v(" "),i("li",[i("p",[e._v("关键注解：")])])]),e._v(" "),i("div",{staticClass:"language- line-numbers-mode"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[e._v(' @FeignClient(name/value = "service-a", url="http://192.168.2.11:8081/",fallback = ErrorServiceImpl.class,configuration=FeignConfig.class)\n\n    name/value: 被调用方的服务名，同时开启了ribbon会创建 服务名.ribbon的负载均衡器，相关设置参考：application-dev.yml \n    url： 直连服务地址，没有开启Ribbon的情况下\n    fallback： 实现异常熔断回退方式，需要开启feign中的Hystrix的支持 ->  feign.hystrix.enabled=true\n    configuration：用于记录，拦截器等额外配置...更多内容如下。\n\n')])]),e._v(" "),i("div",{staticClass:"line-numbers-wrapper"},[i("span",{staticClass:"line-number"},[e._v("1")]),i("br"),i("span",{staticClass:"line-number"},[e._v("2")]),i("br"),i("span",{staticClass:"line-number"},[e._v("3")]),i("br"),i("span",{staticClass:"line-number"},[e._v("4")]),i("br"),i("span",{staticClass:"line-number"},[e._v("5")]),i("br"),i("span",{staticClass:"line-number"},[e._v("6")]),i("br"),i("span",{staticClass:"line-number"},[e._v("7")]),i("br")])]),i("h3",{attrs:{id:"openfeign使用的http客户端"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#openfeign使用的http客户端"}},[e._v("#")]),e._v(" OpenFeign使用的http客户端")]),e._v(" "),i("p",[e._v("OpenFeign的默认HTTP客户端HttpUrlConnection用于执行其HTTP请求。您可以配置其他客户端（ApacheHttpClient，OkHttpClient，...）")]),e._v(" "),i("h3",{attrs:{id:"超时配置"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#超时配置"}},[e._v("#")]),e._v(" 超时配置：")]),e._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",[i("code",[e._v("ribbon.connectTime = 500\nribbon.readTimeout = 500\nservice-a.ribbon.readTimeout = 500\nservice-a.connectTime = 500\n")])])]),i("h3",{attrs:{id:"从springcloudedgware开始-feign支持使用属性自定义feign。对于一个指定名称的feignclient-例如该feignclient的名称为feignname-feign支持如下配置项"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#从springcloudedgware开始-feign支持使用属性自定义feign。对于一个指定名称的feignclient-例如该feignclient的名称为feignname-feign支持如下配置项"}},[e._v("#")]),e._v(" 从SpringCloudEdgware开始，Feign支持使用属性自定义Feign。对于一个指定名称的FeignClient（例如该FeignClient的名称为feignName），Feign支持如下配置项：")]),e._v(" "),i("p",[i("a",{attrs:{"data-fancybox":"",title:"111",href:"feign级配置.png"}},[i("img",{attrs:{src:"feign%E7%BA%A7%E9%85%8D%E7%BD%AE.png",alt:"img.png"}})])]),e._v(" "),i("h2",{attrs:{id:"相关功能"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#相关功能"}},[e._v("#")]),e._v(" 相关功能：")]),e._v(" "),i("p",[e._v("1.参数绑定：")]),e._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",[i("code",[e._v('参数名需要保持一致，并且若参数是一个实体对象的话，需要给该实体添加一个无参的构造函数否则Spring Cloud Feign根据JSON字符串转换User对象时会抛出异常\n\n服务方： \n    @RequestParam String name\n    @RequestHeader String name\n    @RequestBody User user\n\n消费方： FeignClient\n    @RequestParam("name") String name\n    @RequestHeader("name") String name\n    @RequestBody User user\n\n注意：在定义各参数绑定时，@RequestParam、@RequestHeader 等可以指定参数名称的注解，它们的 value 不能为空。\n     虽然在 Spring MVC 程序中，这些注解会根据参数名来作为默认值，但是在 Feign 中绑定参数必须通过 value 属性来指明具体参数名，\n     不然会抛出 IllegalStateException 异常。\n')])])]),i("p",[e._v("2.继承特性：")]),e._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",[i("code",[e._v("现是服务方提供一个http接口，编写参数名及路由接口地址，消费方复制一份到定义到接口上。实际上是重复的代码！\n\n利用spring-cloud-openfeign的继承特性可以缩减部分公共的代码量；\n\n做法：\n    1. 新建一个基础项目，把消费方的接口移植到这里，并且消费方需要依赖这个项目，并继承移植的接口\n    2. 服务提供方的controller实现这个接口，并且依赖这个项目\n\n参考： \n    provider:FeignApiController\n    consumer:FeignApiService\n    nacos-feign: FeignApi\n")])])]),i("ol",{attrs:{start:"3"}},[i("li",[e._v("ribbon设置：")])]),e._v(" "),i("p",[e._v("消费方：\n全局设置：\n#求连接超时时间\nribbon.ConnectionTimeout = 500\n#请求处理的超时时间\nribbon.ReadTimeout = 500")]),e._v(" "),i("p",[e._v("单个服务设置：\nnacos-provider-a.ribbon.ConnnectionTimeout = 700\nnacos-provider-a.ribbon.ReadTimeout=700")])])}),[],!1,null,null,null);n.default=t.exports}}]);