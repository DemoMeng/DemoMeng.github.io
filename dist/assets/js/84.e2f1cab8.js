(window.webpackJsonp=window.webpackJsonp||[]).push([[84],{471:function(s,n,e){"use strict";e.r(n);var a=e(54),i=Object(a.a)({},(function(){var s=this,n=s.$createElement,e=s._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"redis高可用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#redis高可用"}},[s._v("#")]),s._v(" redis高可用")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("    1. redis原生 cluster模式\n    2. redis主从+哨兵模式\n\n    主要的方式有：\n        1.主从复制\n        2.Redis集群\n        3.数据持久化\n        4.自动故障恢复\n    \n    Redis的高可用保障的基础：数据持久化。因为Redis的主从复制和自动故障恢复，都需要依赖Redis持久化相关的东西。同时，Redis的数据持久化也可以用来做数据备份，用来保障数据的安全性。\n    Redis是一个内存数据库，它的数据都保存在内存中，如果实例宕机，那么数据则全部丢失。如何保证数据的完整性和安全性也是提高服务高可用的重要机制之一。\n    Redis提供了完善的持久化机制，可以把内存中的数据持久化到磁盘上，方便我们进行备份数据和快速恢复数据。\n        \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("h1",{attrs:{id:"redis主从-哨兵模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#redis主从-哨兵模式"}},[s._v("#")]),s._v(" redis主从+哨兵模式")]),s._v(" "),e("h3",{attrs:{id:"_1-redis主的redis-conf配置文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-redis主的redis-conf配置文件"}},[s._v("#")]),s._v(" 1. redis主的redis.conf配置文件：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("# 主节点密码，主机点配置masterauth，这样当主节点故障后能成功成为新主节点的从节点，这里建议主节点和所有的从节点使用相同的密码\nmasterauth mengqizhang\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("h3",{attrs:{id:"_2-redis从的redis-conf配置文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-redis从的redis-conf配置文件"}},[s._v("#")]),s._v(" 2. redis从的redis.conf配置文件：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("\nreplicaof 192.168.2.9 6379\n# 主节点密码\nmasterauth mengqizhang\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("h3",{attrs:{id:"_3-sentinel-配置文件-只需要监测redis主即可-主里面有slave的信息-会把sentinel的从节点分发给redis的salve节点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-sentinel-配置文件-只需要监测redis主即可-主里面有slave的信息-会把sentinel的从节点分发给redis的salve节点"}},[s._v("#")]),s._v(" 3. sentinel 配置文件： 只需要监测redis主即可（ 主里面有slave的信息，会把sentinel的从节点分发给redis的salve节点）")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('# 安全策略，选择如下任意一个即可\n# bind 127.0.0.1 192.168.1.1\n# protected-mode no\n\nport 26378\n\n#默认情况下，Redis Sentinel 不作为守护进程运行。如果需要，请使用“是”。注意Redis在守护进程时会在varrunredis-sentinel.pid中写入一个pid文件。\ndaemonize no\n#指定守护进程的文件位置\npidfile /var/run/redis-sentinel.pid\n#指定日志文件名。此外，空字符串可用于强制 Sentinel 登录标准输出。请注意，如果您使用标准输出进行日志记录但守护进程，日志将被发送到 devnull\nlogfile ""\n# sentinel announce-ip 1.2.3.4\n\n# dir <working-directory>\n# sentinel工作目录\ndir /tmp\n\n# sentinel monitor <master-name> <ip> <redis-port> <quorum>\n# 告诉 Sentinel 监视这个 master，并且只有在至少 <quorum> 哨兵同意时才考虑它处于 O_DOWN（客观关闭）状态。\n# 只需要配置主节点，当slave升级为master后，该配置文件会被重写\n# 支持域名配置\n# 监控主要节点，1代表有1台sentinel监控redi为有问题，那就执行故障转移\nsentinel monitor mymaster 192.168.2.9 6379 1\n\n# sentinel auth-pass <master-name> <password>\n# master节点的密码，注意master和slave密码需要设置一致！！\nsentinel auth-pass mymaster mengqizhang\n\n# acl控制，6.0之后新增\n# sentinel auth-user <master-name> <username>\n#     user sentinel-user >somepassword +client +subscribe +publish \\\n#                        +ping +info +multi +slaveof +config +client +exec on\n\n# sentinel ping从节点无响应的时间，无响应则认为故障，S_DOWN，默认为30s秒\n# sentinel down-after-milliseconds <master-name> <milliseconds>\nsentinel down-after-milliseconds mymaster 30000\n\n# 配置sentinel的密码，建议所有的sentinel密码配置为一致\n# requirepass <password>\n\n# 在故障转移期间，我们可以重新配置多少副本以同时指向新副本。如果您使用副本来提供查询服务，请使用较小的数字，以避免在与主服务器执行同步时几乎同时无法访问所有副本。\n# sentinel parallel-syncs <master-name> <numreplicas>\nsentinel parallel-syncs mymaster 1\n\n# 设置故障转移超时时间，默认3分钟\n# sentinel failover-timeout <master-name> <milliseconds>\n# Specifies the failover timeout in milliseconds. It is used in many ways:\n# - 在给定的 Sentinel 已经针对同一个主服务器尝试了先前的故障转移之后，重新启动故障转移所需的时间是故障转移超时的两倍。\n# - 根据 Sentinel 当前配置将副本复制到错误的 master 并强制使用正确的 master 进行复制所需的时间正是故障转移超时（从 Sentinel 检测到错误配置的那一刻开始计算）。\n# - 取消已在进行中但未产生任何配置更改的故障转移所需的时间（SLAVEOF NO ONE 尚未被提升的副本确认）。\n# - 正在进行的故障转移等待所有副本重新配置为新主副本的最长时间。然而，即使在这段时间之后，Sentinels 仍然会重新配置副本，但不会按照指定的精确并行同步进程进行配置。\nsentinel failover-timeout mymaster 180000\n\n\n# sentinel执行故障转移后，可以执行指定的脚本，用于通知开发人员或者记录故障转移记录等！！脚本最长执行时间为60秒\n# 如果脚本以“1”退出，则稍后重试执行（最多当前设置为 10 的最大次数）。\n# 如果脚本以“2”（或更高的值）退出，则不会重试脚本执行。\n# 执行指定的通知脚本\n# sentinel notification-script <master-name> <script-path>\n# sentinel notification-script mymaster /var/redis/notify.sh\n\n# 客户端重新配置脚本\n# sentinel client-reconfig-script <master-name> <script-path>\n#\n# 当主服务器因故障转移而更改时，可以调用脚本以执行特定于应用程序的任务，以通知客户端配置已更改且主服务器位于不同的地址。\n# 以下参数传递给脚本\n# <master-name> <role> <state> <from-ip> <from-port> <to-ip> <to-port>\n# <state> is currently always "failover"\n# <role> is either "leader" or "observer"\n# sentinel client-reconfig-script mymaster /var/redis/reconfig.sh\n\n# 默认情况下，SENTINEL SET 将无法在运行时更改通知脚本和客户端重新配置脚本。这避免了客户端可以将脚本设置为任何内容并触发故障转移以使程序执行的微不足道的安全问题。\nsentinel deny-scripts-reconfig yes\n\n# 有时 Redis 服务器有某些命令，这些命令是 Sentinel 正常工作所需的，重命名为不可猜测的字符串。在提供 Redis 即服务且不希望客户在管理控制台之外重新配置实例的提供商的上下文中，CONFIG 和 SLAVEOF 通常就是这种情况。\n# 在这种情况下，可以告诉 Sentinel 使用不同的命令名称而不是普通的命令名称。例如，如果主“mymaster”和关联的副本将“CONFIG”都重命名为“GUESSME”，我可以使用：\n# SENTINEL rename-command mymaster CONFIG GUESSME\n# 设置好这样的配置后，每次 Sentinel 使用 CONFIG 时，它都会使用 GUESSME。请注意，实际上并不需要尊重命令大小写，因此在上面的示例中编写“config guessme”是相同的。\n# 撤销上面的设置\n# SENTINEL rename-command mymaster CONFIG CONFIG\n\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br"),e("span",{staticClass:"line-number"},[s._v("64")]),e("br"),e("span",{staticClass:"line-number"},[s._v("65")]),e("br"),e("span",{staticClass:"line-number"},[s._v("66")]),e("br"),e("span",{staticClass:"line-number"},[s._v("67")]),e("br"),e("span",{staticClass:"line-number"},[s._v("68")]),e("br"),e("span",{staticClass:"line-number"},[s._v("69")]),e("br"),e("span",{staticClass:"line-number"},[s._v("70")]),e("br"),e("span",{staticClass:"line-number"},[s._v("71")]),e("br"),e("span",{staticClass:"line-number"},[s._v("72")]),e("br"),e("span",{staticClass:"line-number"},[s._v("73")]),e("br"),e("span",{staticClass:"line-number"},[s._v("74")]),e("br"),e("span",{staticClass:"line-number"},[s._v("75")]),e("br"),e("span",{staticClass:"line-number"},[s._v("76")]),e("br"),e("span",{staticClass:"line-number"},[s._v("77")]),e("br"),e("span",{staticClass:"line-number"},[s._v("78")]),e("br"),e("span",{staticClass:"line-number"},[s._v("79")]),e("br"),e("span",{staticClass:"line-number"},[s._v("80")]),e("br"),e("span",{staticClass:"line-number"},[s._v("81")]),e("br"),e("span",{staticClass:"line-number"},[s._v("82")]),e("br")])]),e("h3",{attrs:{id:"redis主从搭建"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#redis主从搭建"}},[s._v("#")]),s._v(" redis主从搭建")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('version: \'3\'\nservices:\n  redis-master:\n    image: redis:latest\n    container_name: redis-master-MQZ\n    restart: on-failure\n    volumes:\n      - /root/logs/docker-log/redis/master:/data\n      - /root/mqz/redis/redis-master.conf:/etc/redis/redis.conf\n    environment:\n      - TZ=Asia/Shanghai\n    command: redis-server /etc/redis/redis.conf\n    ports:\n      - "6379:6379"\n  redis-slave-1:\n    image: redis:latest\n    container_name: redis-slave-1-MQZ\n    restart: on-failure\n    volumes:\n      - /root/logs/docker-log/redis/slave-1:/data\n      - /root/mqz/redis/redis-slave-1.conf:/etc/redis/redis.conf\n    environment:\n      - TZ=Asia/Shanghai\n    command: redis-server /etc/redis/redis.conf\n    ports:\n      - "6378:6378"\n  redis-slave-2:\n    image: redis:latest\n    container_name: redis-slave-2-MQZ\n    restart: on-failure\n    volumes:\n      - /root/logs/docker-log/redis/slave-2:/data\n      - /root/mqz/redis/redis-slave-2.conf:/etc/redis/redis.conf\n    environment:\n      - TZ=Asia/Shanghai\n    command: redis-server /etc/redis/redis.conf\n    ports:\n      - "6377:6377"\n  redis-sentinel-1:\n    image: redis:latest\n    container_name: redis-sentinel-1-MQZ\n    restart: on-failure\n    ports:\n      - "26379:26379"\n    volumes:\n      - /root/mqz/redis/sentinel-1.conf:/etc/redis/sentinel.conf\n    environment:\n      - TZ=Asia/Shanghai\n    command: redis-sentinel /etc/redis/sentinel.conf\n  redis-sentinel-2:\n    image: redis:latest\n    container_name: redis-sentinel-2-MQZ\n    restart: on-failure\n    ports:\n      - "26378:26378"\n    volumes:\n      - /root/mqz/redis/sentinel-2.conf:/etc/redis/sentinel.conf\n    environment:\n      - TZ=Asia/Shanghai\n    command: redis-sentinel /etc/redis/sentinel.conf\n  redis-sentinel-3:\n    image: redis:latest\n    container_name: redis-sentinel-3-MQZ\n    restart: on-failure\n    ports:\n      - "26377:26377"\n    volumes:\n      - /root/mqz/redis/sentinel-2.conf:/etc/redis/sentinel.conf\n    environment:\n      - TZ=Asia/Shanghai\n    command: redis-sentinel /etc/redis/sentinel.conf\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br"),e("span",{staticClass:"line-number"},[s._v("64")]),e("br"),e("span",{staticClass:"line-number"},[s._v("65")]),e("br"),e("span",{staticClass:"line-number"},[s._v("66")]),e("br"),e("span",{staticClass:"line-number"},[s._v("67")]),e("br"),e("span",{staticClass:"line-number"},[s._v("68")]),e("br"),e("span",{staticClass:"line-number"},[s._v("69")]),e("br"),e("span",{staticClass:"line-number"},[s._v("70")]),e("br"),e("span",{staticClass:"line-number"},[s._v("71")]),e("br")])]),e("h3",{attrs:{id:"相关操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#相关操作"}},[s._v("#")]),s._v(" 相关操作")]),s._v(" "),e("p",[s._v("a. sentinel 操作：")]),s._v(" "),e("p",[e("a",{attrs:{"data-fancybox":"",title:"111",href:"sentinel-1查看info信息.png"}},[e("img",{attrs:{src:"sentinel-1%E6%9F%A5%E7%9C%8Binfo%E4%BF%A1%E6%81%AF.png",alt:"img.png"}})]),s._v(" "),e("a",{attrs:{"data-fancybox":"",title:"111",href:"sentinel-master信息.png"}},[e("img",{attrs:{src:"sentinel-master%E4%BF%A1%E6%81%AF.png",alt:"img.png"}})])]),s._v(" "),e("p",[s._v("b. master 操作\n"),e("a",{attrs:{"data-fancybox":"",title:"111",href:"redis-主从配置-查看主从配置信息1.png"}},[e("img",{attrs:{src:"redis-%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE-%E6%9F%A5%E7%9C%8B%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE%E4%BF%A1%E6%81%AF1.png",alt:"img.png"}})]),s._v(" "),e("a",{attrs:{"data-fancybox":"",title:"111",href:"redis-sentinel主节点故障-1.png"}},[e("img",{attrs:{src:"redis-sentinel%E4%B8%BB%E8%8A%82%E7%82%B9%E6%95%85%E9%9A%9C-1.png",alt:"img.png"}})])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v(" docker exec -it redis-sentinel-1-MQZ /bin/bash\n redis-cli -h 172.16.1.11 -p 26379 ： # 查看哨兵搭建信息\n info\n sentinel master mymaster: # 查看mymaster组的主节点信息\n sentinel slaves mymaster：# 查看mymaster组的从节点的信息\n\n\n- REPLICAOF NO ONE： # 则将当前服务器转换为主节点，取消原来的主从复制关系，退出函数。\n\n\n\n- redis-cli -h 127.0.0.1 -p 6379 -a mengqizhang ： 登陆redis客户端\n- info ： 查看redis的配置信息\n  info replication: 查看redis主从配置信息\n\n\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br")])]),e("h2",{attrs:{id:"主从原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#主从原理"}},[s._v("#")]),s._v(" 主从原理")]),s._v(" "),e("p",[e("a",{attrs:{"data-fancybox":"",title:"111",href:"redis主从原理1.png"}},[e("img",{attrs:{src:"redis%E4%B8%BB%E4%BB%8E%E5%8E%9F%E7%90%861.png",alt:"img.png"}})])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("流程：\n1. 从节点发送sync（2.8之后为 psync）请求（全量复制或增量复制）给主节点\n2. 主节点收到请求之后，执行bgsave命令，将当前数据生成内存快照（其中redis.master可以配置自动保存快照的策略：SNAPSHOTTING模块：save 900 1）\n并且，主节点会创建一个复制缓冲区，记录从收到从节点复制请求之后的所有执行命令记录。\n3. 从节点收到主节点的RDB快照文件和buffer文件之后，会清空所有的旧数据，将数据同步到数据库中（磁盘），并且会将数据库的文件同步到内存里\n原理：\na. 主节点在复制缓冲区给每个从节点创建了一个同步备份日志 in memory backlog，超过1M就会清理\nc. 主节点和从节点同时维护了一个复制偏移量（offset）和master线程id（master run id），每次slave请求会携带offset和master run id\n\n\n   注意： \n       a. 如果主节点收到多个从节点的sync（psync）请求，主节点只会执行一次（bgsave->创建复制缓冲区->发送RDB文件），然后把这写同步数据分别发送给所有的从节点\n       b. 如果从节点RDB复制文件超过60秒，从节点则认为复制失败，可以配置这个时间长度大一点 （ repl-timeout ） \n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("h2",{attrs:{id:"redis主从同步包括三个阶段。"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#redis主从同步包括三个阶段。"}},[s._v("#")]),s._v(" Redis主从同步包括三个阶段。")]),s._v(" "),e("p",[e("a",{attrs:{"data-fancybox":"",title:"111",href:"redis主从同步原理2.png"}},[e("img",{attrs:{src:"redis%E4%B8%BB%E4%BB%8E%E5%90%8C%E6%AD%A5%E5%8E%9F%E7%90%862.png",alt:"img.png"}})])]),s._v(" "),e("ul",[e("li",[s._v("第一阶段：主从库间建立连接、协商同步。")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("从库向主库发送psync 命令，告诉它要进行数据同步。\n主库收到 psync 命令后,响应FULLRESYNC命令（它表示第一次复制采用的是全量复制），并带上主库runID和主库目前的复制进度offset。\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("ul",[e("li",[s._v("第二阶段：主库把数据同步到从库，从库收到数据后，完成本地加载。")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("主库执行bgsave命令，生成RDB文件，存储到磁盘，接着将文件发给从库。从库接收到RDB 文件后，会先清空当前数据库，然后加载 RDB 文件。\n主库把数据同步到从库的过程中，新来的写操作，会记录到replication buffer。\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("ul",[e("li",[s._v("第三阶段，主库把新写的命令，发送到从库。")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("主库完成RDB发送后，会把replication buffer中的修改操作发给从库，从库再重新执行这些操作。这样主从库就实现同步啦。\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"主从数据不一致"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#主从数据不一致"}},[s._v("#")]),s._v(" 主从数据不一致")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("1.原因：\n    主从库网路延迟。\n    从库收到了主从命令，但是它正在执行阻塞性的命令（如hgetall等）。\n2.解决：\n    可以换更好的硬件配置，保证网络畅通。\n    监控主从库间的复制进度\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("h2",{attrs:{id:"一主多从-全量复制时主库压力问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一主多从-全量复制时主库压力问题"}},[s._v("#")]),s._v(" 一主多从，全量复制时主库压力问题")]),s._v(" "),e("p",[e("a",{attrs:{"data-fancybox":"",title:"111",href:"一主多从全量复制压力的问题.png"}},[e("img",{attrs:{src:"%E4%B8%80%E4%B8%BB%E5%A4%9A%E4%BB%8E%E5%85%A8%E9%87%8F%E5%A4%8D%E5%88%B6%E5%8E%8B%E5%8A%9B%E7%9A%84%E9%97%AE%E9%A2%98.png",alt:"img.png"}})])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("如果是一主多从的模式，从库很多的时候，每个从库都要和主库进行全量复制时候，主库压力会过大，因为主库需要fork进程生成RDB，\n这个fork进程是会阻塞主线程，影响主库正常处理的请求，同时传输大的RDB文件也是会占用主库的网络带宽。\n\n解决办法：\n    可以使用 主-从（主）-从 的方式，就是部署主从集群的时候，选择服务器硬件好的从库做下级的主库，可其他部分从库建立主从关系\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("h2",{attrs:{id:"redis主从同步的方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#redis主从同步的方式"}},[s._v("#")]),s._v(" redis主从同步的方式：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("全量复制： 所有的数据都会同步到从redis中\n增量复制： 网络中断等情况后的复制，只将中断部分复制数据到从redis中\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("h2",{attrs:{id:"redis哨兵模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#redis哨兵模式"}},[s._v("#")]),s._v(" redis哨兵模式：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('\n- 流语言协议：gossip protocols，用于传播master是否故障的信息\n- 投票协议：  agreement protocols，用于sentinel之间投票决定master故障迁移，以及升级哪个slave为新的master\n\n- 心跳机制： Redis创建master和slave时，sentinel需要配置主节点的信息（sentinel monitor mymaster 192.168.2.9 6379 1）\n  及投票决议数目（比如这个1代表的是如果有1台sentinel认为这个master有故障就会执行故障迁移 ）\n  sentinel会发送ping命令到主节点、从节点作为心跳检测。\n\n- 判断主节点故障：（主观下线、客观下线） \n  1. sentinel每隔1s向所有的master、slave节点发送ping命令进行心跳检测，如果平命令无返回时间超过30s，则认为该master节点为故障，并且标记flags状态为SRI_S_DOWN\n  2. 上个认为master故障的sentinel节点，sentinel 发送sentinel is-master-down-by-addr消息，询问其他sentinel是否认同该master已故障\n     发送命令：sentinel is-master-down-by-addr <ip> <port> <current_epoch> <runid>\n        ip：主观下线的服务ip\n        port：主观下线的服务端口\n        current_epoch：sentinel的纪元\n        runid：*表示检测服务下线状态，如果是sentinel的运行id，表示用来选举领头sentinel\n        \n    主观下线：就是哨兵使用ping命令检测redis节点的心跳，若响应超时就会标记为主观下线，并且发送上面的消息给其他哨兵，执行客观下线的过程。\n    客观下线：多个哨兵实例均认为该redis节点已经下线（多个哨兵对该redis节点标记为了主观下线）\n    误判： 主库实际并没有下线，但是哨兵误以为它下线了。误判一般会发生在集群网络压力较大、网络拥塞，或者是主库本身压力较大的情况下\n    \n  3. 其他的sentinel节点收到另外sentinel的通知消息，会根据发送的消息进行判断master是否真的已故障，若认为master节点已经故障的数量大于配置的数量，则\n     执行故障转移步骤，升级某slave为新的master节点 \n     这就是sentinel的客观下线，只有客观下线才能真正认为该redis主节点已经故障了。其判断的原则就是少数服从多数，这也就是为什么分布式系统通常会部署奇数个实例的原因，方便投票决策。\n\n\n- 选举算法：\n  1.\n\n\n- 故障转移：\n  升级某个slave为新master的条件：\n  1. redis.conf中的replica-priority配置项代表主节点故障后，升级从节点会根据这个参数值进行是否优先升级，参数越小优先级越高\n  2. 若replica-priority配置值相同，那就选择offset最大的，越大表示同步的数据越多\n  3. 若offset也相同，选择run id较小的\n\n  sentinel的工作：\n  1. sentinel会将新选出来slave执行: slaveof no one(redis手动升级从节点为主节点命令)\n  2. sentinel发送命令slaveof 新masterIP 端口给其他的从节点，通知新主上位，后向这个新主复制数据\n  3. sentinel在选举完新主master节点之后，会将之前故障master节点变成新主节点的从节点，并且将其下线\n  这样这个故障节点下次恢复后就不会出现双主的问题（脑裂）\n\n- 哨兵机制的三个阶段：\n1. 监控： 也就是上面的 "判断主节点故障" 的大致过程\n哨兵向master发送ping心跳检测命令，若指定时间内无返回，则标记为主节点故障（SRI_S_DOWN），并且该哨兵会发送广播消息给其他哨兵，\n用于询问其他哨兵是否认同当前主节点已发生故障。若其他哨兵也认为当前主节点故障，并且认为主故障的哨兵数量超过配置的数量，则确定已故障，执行后续选主、故障转移等操作。\n\n2. 选主：\n       在确认主节点真正故障之后，开始执行选新主节点的过程。其中选主的主要是对从节点进行打分，打分规则为： 从库优先级、从库复制进度、从库id号。\n       从库优先级：   配置在从库 redis.conf 中的 replica-priority （旧版本： slave-priority ）的值判定，值越小优先级越高。\n       从库复制进度： 根据 slave_repl_offset 来，值越大表示已经同步的数据越多，分数越高。 \n       从库id号：    启动redis实例的时候，会生成一个id号，在 从库优先级 和 从库复制进度相同情况下，从库id号越小分数越高。 \n       其他： 从库的网络连接状况、从库和主库的断连次数\n\n3. 通知： \n         选主结束之后，通知所有的从节点执行 replicaof 新主节点 的命令，就是和新主节点建立主从关系，数据同步复制关系。另外把之前就的主节点变成新主的从节点以防脑裂！\n\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br")])]),e("h2",{attrs:{id:"哨兵模式的缺点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#哨兵模式的缺点"}},[s._v("#")]),s._v(" 哨兵模式的缺点")]),s._v(" "),e("ol",[e("li",[s._v("哨兵模式下每台Redis服务器都存储相同的数据，浪费内存控件，数据量太大，主从同步时严重影响了master性能")]),s._v(" "),e("li",[s._v("哨兵模式是中心化的集群实现方案，每个从机和主机的耦合度很高，master宕机到slave选举master恢复期间服务不可用")]),s._v(" "),e("li",[s._v("哨兵模式只有一个Redis主机来接收处理和写的请求，写的操作还是收到单机瓶颈的影响，没有实现真正的分布式架构")])]),s._v(" "),e("p",[s._v("Redis Cluster 解决了以上哨兵模式的问题")]),s._v(" "),e("h2",{attrs:{id:"springboot-redis集群"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#springboot-redis集群"}},[s._v("#")]),s._v(" springboot+redis集群")]),s._v(" "),e("h3",{attrs:{id:"_1-redis配置读写分离"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-redis配置读写分离"}},[s._v("#")]),s._v(" 1. redis配置读写分离：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("参考配置： RedisSentinelConfig:         \nLettuceClientConfiguration clientConfiguration = LettucePoolingClientConfiguration.builder()\n        .readFrom(ReadFrom.REPLICA)//TODO LETTUCE设置读写分离\n        .poolConfig(config)\n        .build();\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("h3",{attrs:{id:"_2-springboot配置redis集群"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-springboot配置redis集群"}},[s._v("#")]),s._v(" 2. springboot配置redis集群")]),s._v(" "),e("ul",[e("li",[s._v("a. 引入pom.xml依赖")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("\n\x3c!-- redis-start --\x3e\n    <dependency>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-data-redis</artifactId>\n    </dependency>\n\x3c!-- redis-end --\x3e\n\n\x3c!-- 配置sentinel需要使用到 --\x3e\n<dependency>\n    <groupId>org.apache.commons</groupId>\n    <artifactId>commons-pool2</artifactId>\n</dependency>\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("ul",[e("li",[s._v("b. application.yml配置：")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("# 配置redis-replication 主从+哨兵模式\nspring:\n  redis:\n    lettuce:\n      pool:\n        max-active: 1024 #最大连接数\n        max-wait: 20000 #最大阻塞等待时间(负数表示没限制)\n        max-idle: 200 #最大空闲\n        min-idle: 10 #最小空闲\n    sentinel:\n      master: mymaster # 主从组的名称，取值是来自于sentinel的配置文件 ！！\n      nodes: x.x.x.x:26379,x.x.x.x:26378,x.x.x.x:26377 # sentinel节点，ip:port，逗号隔开\n    timeout: 100000\n    client-name: LETTUCE\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("ul",[e("li",[s._v("c. LETTUCE 连接池配置")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('package com.mqz.better.redis.replication.sentinel;\n\nimport io.lettuce.core.ReadFrom;\nimport org.apache.commons.pool2.impl.GenericObjectPoolConfig;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.beans.factory.annotation.Qualifier;\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.boot.autoconfigure.data.redis.RedisProperties;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.data.redis.connection.RedisNode;\nimport org.springframework.data.redis.connection.RedisSentinelConfiguration;\nimport org.springframework.data.redis.connection.lettuce.LettuceClientConfiguration;\nimport org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory;\nimport org.springframework.data.redis.connection.lettuce.LettucePoolingClientConfiguration;\nimport org.springframework.data.redis.core.RedisTemplate;\nimport org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer;\nimport org.springframework.data.redis.serializer.StringRedisSerializer;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\n/**\n * :  版权所有 © Copyright 2012<br>\n *\n * @Author： 蒙大拿\n * @Date：2021/10/22 10:39 上午\n * @Description\n * @About： https://github.com/DemoMeng\n */\n@Configuration\npublic class RedisSentinelConfig {\n\n\n    @Value("${spring.redis.sentinel.master}")\n    private String master;\n    @Value("${spring.redis.sentinel.nodes}")\n    private String redisNodes;\n\n    @Autowired\n    RedisProperties redisProperties;\n\n\n    @Bean\n    public GenericObjectPoolConfig poolConfig() {\n        GenericObjectPoolConfig config = new GenericObjectPoolConfig();\n        config.setMinIdle(redisProperties.getLettuce().getPool().getMinIdle());\n        config.setMaxIdle(redisProperties.getLettuce().getPool().getMaxIdle());\n        config.setMaxTotal(redisProperties.getLettuce().getPool().getMaxActive());\n        config.setMaxWaitMillis(redisProperties.getLettuce().getPool().getMaxWait().toMillis());\n        return config;\n    }\n\n    @Bean\n    public RedisSentinelConfiguration configuration() {\n        RedisSentinelConfiguration redisConfig = new RedisSentinelConfiguration();\n        redisConfig.setMaster(redisProperties.getSentinel().getMaster());\n        redisConfig.setPassword("mengqizhang");\n        if(redisProperties.getSentinel().getNodes()!=null) {\n            List<RedisNode> sentinelNode=new ArrayList<RedisNode>();\n            for(String sen : redisProperties.getSentinel().getNodes()) {\n                String[] arr = sen.split(":");\n                sentinelNode.add(new RedisNode(arr[0],Integer.parseInt(arr[1])));\n            }\n            redisConfig.setSentinels(sentinelNode);\n        }\n        return redisConfig;\n    }\n    @Bean("lettuceConnectionFactory")\n    public LettuceConnectionFactory lettuceConnectionFactory(@Qualifier("poolConfig") GenericObjectPoolConfig config,\n                                                             @Qualifier("configuration") RedisSentinelConfiguration redisConfig) {//注意传入的对象名和类型RedisSentinelConfiguration\n        LettuceClientConfiguration clientConfiguration = LettucePoolingClientConfiguration.builder()\n                .readFrom(ReadFrom.REPLICA)//TODO LETTUCE设置读写分离\n                .poolConfig(config)\n                .build();\n        return new LettuceConnectionFactory(redisConfig, clientConfiguration);\n    }\n\n//    @Bean("stringObjectRedisTemplate")\n//    public RedisTemplate<String, Object> stringObjectRedisTemplate(@Qualifier("lettuceConnectionFactory") LettuceConnectionFactory connectionFactory) {\n//        RedisTemplate<String, Object> redisTemplate = new RedisTemplate<>();\n//        redisTemplate.setConnectionFactory(connectionFactory);\n//        StringRedisSerializer stringRedisSerializer = new StringRedisSerializer();\n//        GenericJackson2JsonRedisSerializer genericJackson2JsonRedisSerializer = new GenericJackson2JsonRedisSerializer();\n//        //设置序列化器\n//        redisTemplate.setKeySerializer(stringRedisSerializer);\n//        redisTemplate.setValueSerializer(genericJackson2JsonRedisSerializer);\n//        redisTemplate.setHashKeySerializer(stringRedisSerializer);\n//        redisTemplate.setHashValueSerializer(genericJackson2JsonRedisSerializer);\n//        redisTemplate.afterPropertiesSet();\n//        return redisTemplate;\n//    }\n}\n\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br"),e("span",{staticClass:"line-number"},[s._v("64")]),e("br"),e("span",{staticClass:"line-number"},[s._v("65")]),e("br"),e("span",{staticClass:"line-number"},[s._v("66")]),e("br"),e("span",{staticClass:"line-number"},[s._v("67")]),e("br"),e("span",{staticClass:"line-number"},[s._v("68")]),e("br"),e("span",{staticClass:"line-number"},[s._v("69")]),e("br"),e("span",{staticClass:"line-number"},[s._v("70")]),e("br"),e("span",{staticClass:"line-number"},[s._v("71")]),e("br"),e("span",{staticClass:"line-number"},[s._v("72")]),e("br"),e("span",{staticClass:"line-number"},[s._v("73")]),e("br"),e("span",{staticClass:"line-number"},[s._v("74")]),e("br"),e("span",{staticClass:"line-number"},[s._v("75")]),e("br"),e("span",{staticClass:"line-number"},[s._v("76")]),e("br"),e("span",{staticClass:"line-number"},[s._v("77")]),e("br"),e("span",{staticClass:"line-number"},[s._v("78")]),e("br"),e("span",{staticClass:"line-number"},[s._v("79")]),e("br"),e("span",{staticClass:"line-number"},[s._v("80")]),e("br"),e("span",{staticClass:"line-number"},[s._v("81")]),e("br"),e("span",{staticClass:"line-number"},[s._v("82")]),e("br"),e("span",{staticClass:"line-number"},[s._v("83")]),e("br"),e("span",{staticClass:"line-number"},[s._v("84")]),e("br"),e("span",{staticClass:"line-number"},[s._v("85")]),e("br"),e("span",{staticClass:"line-number"},[s._v("86")]),e("br"),e("span",{staticClass:"line-number"},[s._v("87")]),e("br"),e("span",{staticClass:"line-number"},[s._v("88")]),e("br"),e("span",{staticClass:"line-number"},[s._v("89")]),e("br"),e("span",{staticClass:"line-number"},[s._v("90")]),e("br"),e("span",{staticClass:"line-number"},[s._v("91")]),e("br"),e("span",{staticClass:"line-number"},[s._v("92")]),e("br"),e("span",{staticClass:"line-number"},[s._v("93")]),e("br"),e("span",{staticClass:"line-number"},[s._v("94")]),e("br")])]),e("HideArticle")],1)}),[],!1,null,null,null);n.default=i.exports}}]);