(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{445:function(e,s,a){"use strict";a.r(s);var r=a(54),t=Object(r.a)({},(function(){var e=this,s=e.$createElement,a=e._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h2",{attrs:{id:"docker安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker安装"}},[e._v("#")]),e._v(" docker安装")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("卸载之前的旧版本")]),e._v(" "),a("ul",[a("li",[e._v("sudo yum remove docker docker-client docker-client-latest docker-common docker-latest docker-latest-logrotate docker-logrotate docker-engine")])])]),e._v(" "),a("li",[a("p",[e._v("设置yum安装的镜像仓库 (可选)：")]),e._v(" "),a("ul",[a("li",[e._v("sudo yum install -y yum-utils")]),e._v(" "),a("li",[e._v("sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo")])]),e._v(" "),a("p",[e._v("若上面的镜像仓库下载速度过慢可以使用aliyun的镜像仓库进行下载：")]),e._v(" "),a("ul",[a("li",[e._v("sudo yum install -y yum-utils")]),e._v(" "),a("li",[e._v("sudo yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo")])])]),e._v(" "),a("li",[a("p",[e._v("安装docker")]),e._v(" "),a("ul",[a("li",[e._v("sudo yum install docker-ce docker-ce-cli containerd.io")])])]),e._v(" "),a("li",[a("p",[e._v("安装docker-compose")]),e._v(" "),a("ul",[a("li",[e._v("yum install docker-compose")])])]),e._v(" "),a("li",[a("p",[e._v("开启docker服务")]),e._v(" "),a("ul",[a("li",[e._v("sudo systemctl start docker")])])]),e._v(" "),a("li",[a("p",[e._v("docker版本：")]),e._v(" "),a("ul",[a("li",[e._v("docker -version")])])])]),e._v(" "),a("h2",{attrs:{id:"设置docker镜像源"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设置docker镜像源"}},[e._v("#")]),e._v(" 设置docker镜像源")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('- 1.修改(没有就创建) /etc/docker/daemon.json为：\n     {\n      "registry-mirrors": ["https://9cpn8tt6.mirror.aliyuncs.com"]\n     }\n- 2.重新加载：  [root@mqz docker]# systemctl daemon-reload\n- 3.重启docker：[root@mqz docker]# systemctl restart docker\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br")])]),a("h2",{attrs:{id:"docker-compose-安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose-安装"}},[e._v("#")]),e._v(" docker-compose 安装")]),e._v(" "),a("h3",{attrs:{id:"_1-下载安装包-速度慢的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-下载安装包-速度慢的"}},[e._v("#")]),e._v(" 1.下载安装包： 速度慢的")]),e._v(" "),a("ul",[a("li",[e._v('sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose')])]),e._v(" "),a("h3",{attrs:{id:"_2-利用pip安装docker-compose"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-利用pip安装docker-compose"}},[e._v("#")]),e._v(" 2.利用pip安装docker-compose:")]),e._v(" "),a("ul",[a("li",[e._v("安装pip ：     yum -y install python-pip")]),e._v(" "),a("li",[e._v("升级pip到最新：")]),e._v(" "),a("li",[e._v("卸载 ：        python -m pip uninstall pip")])]),e._v(" "),a("h3",{attrs:{id:"_3-github上下载安装包进行安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-github上下载安装包进行安装"}},[e._v("#")]),e._v(" 3.github上下载安装包进行安装：")]),e._v(" "),a("ul",[a("li",[e._v("https://github.com/docker/compose/releases 下载指定的docker-compose")]),e._v(" "),a("li",[e._v("把下载的文件 docker-compose-Linux-x86_64 上传到linux服务器并修改二进制文件名字： /usr/local/bin/docker-compose")]),e._v(" "),a("li",[e._v("修改该文件的执行权限  sudo chmod +x /usr/loacl/bin/docker-compose")]),e._v(" "),a("li",[e._v("创建软链接  sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose")]),e._v(" "),a("li",[e._v("查看docker-compose版本判断是否安装成功 ！")])]),e._v(" "),a("p",[a("a",{attrs:{"data-fancybox":"",title:"111",href:"docker-compose二进制安装包安装.png"}},[a("img",{attrs:{src:"docker-compose%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AE%89%E8%A3%85%E5%8C%85%E5%AE%89%E8%A3%85.png",alt:"img_2.png"}})])]),e._v(" "),a("h2",{attrs:{id:"强制卸载docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#强制卸载docker"}},[e._v("#")]),e._v(" 强制卸载docker")]),e._v(" "),a("p",[e._v("删除之前需要 ： systemctl stop docker")]),e._v(" "),a("ol",[a("li",[e._v("yum list installed |grep docker  ： 查看docker安装的docker文件包\n"),a("a",{attrs:{"data-fancybox":"",title:"111",href:"查看安装的docker文件包.png"}},[a("img",{attrs:{src:"%E6%9F%A5%E7%9C%8B%E5%AE%89%E8%A3%85%E7%9A%84docker%E6%96%87%E4%BB%B6%E5%8C%85.png",alt:"img_2.png"}})])]),e._v(" "),a("li",[e._v("rpm -qa |grep docker  ： 查看docker相关的rpm源文件\n"),a("a",{attrs:{"data-fancybox":"",title:"111",href:"查看docker的rpm源文件.png"}},[a("img",{attrs:{src:"%E6%9F%A5%E7%9C%8Bdocker%E7%9A%84rpm%E6%BA%90%E6%96%87%E4%BB%B6.png",alt:"img_2.png"}})])]),e._v(" "),a("li",[e._v("yum -y remove docker.x86_64")]),e._v(" "),a("li",[e._v("rpm -qa |grep docker")]),e._v(" "),a("li",[e._v("删除docker的镜像文件，默认在/var/lib/docker目录下，rm -rf /var/lib/docker")])]),e._v(" "),a("h2",{attrs:{id:"dockerfile"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile"}},[e._v("#")]),e._v(" Dockerfile")]),e._v(" "),a("p",[e._v("FROM : 构建镜像基于哪个镜像\nMAINTAINER: 镜像维护者姓名或邮箱地址\nRUN : 构建镜像时运行的指令\nCMD : 运行容器时执行的shell环境\nVOLUME : 指定容器挂载点到宿主机自动生成的目录或其他容器\nUSER : 为RUN、CMD、和 ENTRYPOINT 执行命令指定运行用户\nWORKDIR: 为 RUN、CMD、ENTRYPOINT、COPY 和 ADD 设置工作目录，就是切换目录\nHEALTHCHECH: 健康检查\nARG : 构建时指定的一些参数\nEXPOSE: 声明容器的服务端口（仅仅是声明）\nENV: 设置容器环境变量\nADD :拷贝文件或目录到容器中，如果是URL或压缩包便会自动下载或自动解压\nCOPY: 拷贝文件或目录到容器中，跟ADD类似，但不具备自动下载或解压的功能\nENTRYPOINT： 运行容器时执行的shell命令")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('#基础镜像\nFROM java:8\n#镜像的制作人\nMAINTAINER mengqizhang\nENV APP_NAME="nacos-gateway-0.0.1"\n#定义jar包名称 给个默认值\nARG JAR_NAME=${APP_NAME}.jar\n#此处必须这么指定，ARG参数在最终的ENTRYPOINT执行时会出现问题\nENV FILE_NAME="${APP_NAME}.jar"\nENV WORK_DIR="/home/mqz/nacos-project/${APP_NAME}"\nENV JAVA_MS="1G"\nENV JAVA_OPTS="-Djava.security.egd=file:/dev/./urandom -Dlog4j.defaultInitOverride=true -Dorg.apache.tomcat.util.http.ServerCookie.ALLOW_EQUALS_IN_VALUE=true -Dorg.apache.tomcat.util.http.ServerCookie.ALLOW_HTTP_SEPARATORS_IN_V0=true -server  -XX:MetaspaceSize=256m -XX:MaxMetaspaceSize=256m -Xmn256m -XX:SurvivorRatio=10 -XX:+UseConcMarkSweepGC -XX:CMSMaxAbortablePrecleanTime=5000 -XX:+CMSClassUnloadingEnabled -XX:CMSInitiatingOccupancyFraction=80 -XX:+UseCMSInitiatingOccupancyOnly -XX:+ExplicitGCInvokesConcurrent -Dsun.rmi.dgc.server.gcInterval=2592000000 -Dsun.rmi.dgc.client.gcInterval=2592000000 -XX:ParallelGCThreads=4 -Djava.awt.headless=true -Dsun.net.client.defaultConnectTimeout=10000 -Dsun.net.client.defaultReadTimeout=30000  -Dfile.encoding=utf-8"\nRUN mkdir -p  ${WORK_DIR}\n#目的解决docker容器和宿主机时差的问题！\nRUN /bin/cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime && echo \'Asia/Shanghai\' >/etc/timezone\nWORKDIR ${WORK_DIR}\n# 把可执行jar包复制到基础镜像的根目录下\nCOPY target/${FILE_NAME} ${FILE_NAME}\n#声明了容器应该打开的端口并没有实际上将它打开\nEXPOSE 8068\n#健康检查\nHEALTHCHECK --start-period=60s --interval=60s --timeout=60s --retries=10 CMD curl --fail localhost:2021/actuator/health || exit 1\n#指定容器启动时要执行的命令，但如果存在CMD指令，CMD中的参数会被附加到ENTRYPOINT指令的后面\nENTRYPOINT ["sh","-c","java ${JAVA_OPTS} -jar ${FILE_NAME}"]\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br"),a("span",{staticClass:"line-number"},[e._v("16")]),a("br"),a("span",{staticClass:"line-number"},[e._v("17")]),a("br"),a("span",{staticClass:"line-number"},[e._v("18")]),a("br"),a("span",{staticClass:"line-number"},[e._v("19")]),a("br"),a("span",{staticClass:"line-number"},[e._v("20")]),a("br"),a("span",{staticClass:"line-number"},[e._v("21")]),a("br"),a("span",{staticClass:"line-number"},[e._v("22")]),a("br"),a("span",{staticClass:"line-number"},[e._v("23")]),a("br"),a("span",{staticClass:"line-number"},[e._v("24")]),a("br")])])])}),[],!1,null,null,null);s.default=t.exports}}]);